{"version":3,"file":"js/src_pages_components_autocomplete_index_ts.js","mappings":"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CN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QA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0B;AACzC,OAAO;AACP;AACA,cAAc,qCAAS;AACvB;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;ACjOmM;AAChG;AACnG,6BAAe,oCAAS;AACxB;AACA;AACA;AACA,eAAe,gEAAgC;AAC/C;AACA;AACA,sBAAsB,4CAAY;AAClC,WAAW,qCAAS;AACpB;AACA,+BAA+B,qCAAS;AACxC;AACA;AACA;AACA,kDAAkD;AAClD,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,6BAA6B,gEAAgC;AAC7D;AACA;AACA;AACA,4BAA4B,qCAAS;AACrC;AACA,iBAAiB;AACjB;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa,qCAAS,+CAA+C,qCAAS;AAC9E;AACA;AACA;AACA;AACA,aAAa,qCAAS,yCAAyC,qCAAS;AACxE,mBAAmB,gFAAuC;AAC1D,kBAAkB,qCAAS;AAC3B,eAAe,0DAA0B;AACzC,OAAO;AACP;AACA,sBAAsB,4CAAY;AAClC,WAAW,qCAAS;AACpB;AACA,+BAA+B,qCAAS;AACxC;AACA;AACA;AACA,mDAAmD;AACnD,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,6BAA6B,gEAAgC;AAC7D;AACA;AACA;AACA,4BAA4B,qCAAS;AACrC;AACA,iBAAiB;AACjB;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa,qCAAS,gDAAgD,qCAAS;AAC/E;AACA;AACA;AACA;AACA,aAAa,qCAAS,yCAAyC,qCAAS;AACxE,mBAAmB,gFAAuC;AAC1D,kBAAkB,qCAAS;AAC3B,eAAe,0DAA0B;AACzC,OAAO;AACP;AACA,cAAc,qCAAS;AACvB;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;;;ACxG+Z;AAC5T;AACD;AAC3B;AACb;AAC1D,6BAAe,oCAAS;AACxB;AACA;AACA;AACA,eAAe,oDAAoB;AACnC;AACA;AACA,eAAe,2DAAiB;AAChC,OAAO;AACP;A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CAAS;AACxC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,6BAA6B,gEAAgC;AAC7D;AACA;AACA;AACA,4BAA4B,qCAAS;AACrC;AACA,iBAAiB;AACjB;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa,qCAAS,gDAAgD,qCAAS;AAC/E;AACA;AACA;AACA;AACA,aAAa,qCAAS,yCAAyC,qCAAS;AACxE,mBAAmB,gFAAuC;AAC1D,kBAAkB,qCAAS;AAC3B,eAAe,0DAA0B;AACzC,OAAO;AACP;AACA,cAAc,qCAAS;AACvB;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;;;ACxGyQ;AACvK;AACoG;AAC/I;AACvD,6BAAe,oCAAS;AACxB;AACA;AACA;AACA,kBAAkB,4CAAY;AAC9B,OAAO,qCAAS;AAChB;AACA,2BAA2B,qCAAS;AACpC;AACA;AACA;AACA;AACA,yBAAyB,oDAAoB;AAC7C;AACA;AACA,yBAAyB,gDAAgB,4BAA4B,oEAA6B;AAClG,iBAAiB;AACjB,gBAAgB,gEAAgC;AAChD;AACA;AACA;AACA,gBAAgB,gEAAgC;AAChD;AACA;AACA,kBAAkB,oDAAoB;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,gBAAgB,oDAAoB;AACpC;AACA;AACA;AACA,mBAAmB;AACnB,kBAAkB,oDAAoB;AACtC;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB,gEAAgC;AACpD;AACA,sBAAsB,gEAAgC;AACtD;AACA;AACA;AACA;AACA,sBAAsB,gEAAgC;AACtD;AACA;AACA;AACA;AACA,oBAAoB,gEAAgC;AACpD;AACA;AACA,sBAAsB,gEAAgC;AACtD;AACA,wBAAwB,gEAAgC;AACxD;AACA;AACA,0CAA0C,4CAAY;AACtD,+BAA+B,qCAAS;AACxC;AACA,mDAAmD,qCAAS;AAC5D,+BAA+B;AAC/B;AACA;AACA,6BAA6B;AAC7B,uCAAuC,8EAAwC;AAC/E,sCAAs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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAW;AAC1B;AACA,eAAe,mDAAY;AAC3B;AACA,eAAe,qDAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAI;AAG1B;;AAEF;;;;;;;;;;;;;;;;;;;AC9IwZ;AAC/R;AACxE;AAC0B;AAC1B;AACM;AACvD,6BAAe,oCAAS;AACxB;AACA;AACA;AACA,kBAAkB,4CAAY;AAC9B,OAAO,qCAAS;AAChB,2BAA2B,qCAAS;AACpC;AACA;AACA;AACA;AACA,4BAA4B,4CAAY;AACxC,iBAAiB,qCAAS;AAC1B,qCAAqC,qCAAS;AAC9C;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,sCAAsC,4CAAY;AAClD,2BAA2B,qCAAS;AACpC,+CAA+C,qCAAS;AACxD;AACA;AACA;AACA;AACA,iCAAiC;AACjC,uCAAuC;AACvC,+BAA+B;AAC/B;AACA;AACA,iCAAiC;AACjC,uCAAuC;AACvC,+BAA+B;AAC/B;AACA;AACA,iCAAiC;AACjC;AACA,+BAA+B;AAC/B;AACA;AACA,iCAAiC;AACjC;AACA;AACA,6BAA6B;AAC7B,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,6BAA6B,qCAAS,qCAAqC,qCAAS;AACpF;AACA;AACA;AACA;AACA,6BAA6B,qCAAS,kCAAkC,qCAAS;AACjF;AACA;AACA;AACA;AACA,6BAA6B,qCAAS,oCAAoC,qCAAS;AACnF;AACA;AACA;A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","sources":["webpack://jinge-material-site/./src/pages/components/autocomplete/api.ts","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/async.ts","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/box.ts","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/search.ts","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/static.ts","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/template.ts","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/trigger.ts","webpack://jinge-material-site/./src/pages/components/autocomplete/index.ts","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/async.html","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/box.html","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/search.html","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/static.html","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/template.html","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/trigger.html","webpack://jinge-material-site/./src/pages/components/autocomplete/index.html","webpack://jinge-material-site/../jinge-material-icons/lib/MoreVert.js","webpack://jinge-material-site/../jinge-material-icons/lib/Refresh.js","webpack://jinge-material-site/../jinge-material/lib/autocomplete/style/index.css?e5c9","webpack://jinge-material-site/../jinge-material/lib/highlight/style/index.css?1b13","webpack://jinge-material-site/../jinge-material/lib/spinner/style/index.css?4085","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/template.scss?c4d6","webpack://jinge-material-site/./src/pages/components/autocomplete/index.scss?fa6c","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/async.ts?f7b6","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/box.ts?ae82","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/search.ts?7059","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/static.ts?7d78","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/template.ts?12bb","webpack://jinge-material-site/./src/pages/components/autocomplete/examples/trigger.ts?ec0e","webpack://jinge-material-site/../jinge-material/lib/autocomplete/index.js","webpack://jinge-material-site/../jinge-material/lib/autocomplete/index.tpl.js","webpack://jinge-material-site/../jinge-material/lib/autocomplete/style/index.js","webpack://jinge-material-site/../jinge-material/lib/highlight/index.js","webpack://jinge-material-site/../jinge-material/lib/highlight/index.tpl.js","webpack://jinge-material-site/../jinge-material/lib/highlight/style/index.js","webpack://jinge-material-site/../jinge-material/lib/spinner/index.js","webpack://jinge-material-site/../jinge-material/lib/spinner/index.tpl.js","webpack://jinge-material-site/../jinge-material/lib/spinner/style/index.js"],"sourcesContent":["import { vm } from 'jinge';\n\nexport default () =>\n  vm({\n    slots: {\n      headings: ['名称', '描述', '示例'],\n      props: [\n        {\n          name: 'item',\n          description: '创建自定义的匹配项',\n          options: [\n            {\n              name: 'option',\n              description: '将收到匹配选项的每个选项。',\n            },\n            {\n              name: 'term',\n              description: '当前输入的搜索词。',\n            },\n          ],\n          usage: '<_slot slot-pass:\"item\" vm-use:option=\"option\" vm:term > ... </_slot>',\n        },\n        {\n          name: 'empty',\n          description: '在零匹配的情况下创建一个空状态',\n          options: [\n            {\n              name: 'term',\n              description: '当前输入的搜索词。',\n            },\n          ],\n          usage: '<_slot slot-pass:empty vm-use:term=\"term\"> ... </_slot>',\n        },\n      ],\n    },\n    props: {\n      headings: ['名称', '描述', '默认值'],\n      props: [\n        {\n          name: 'value',\n          type: 'String',\n          description: '自动补全输入框的值',\n          defaults: 'null',\n        },\n        {\n          name: 'options',\n          type: 'Array|Promise',\n          description:\n            '要搜索的可用选项。如果为 Array，则自动完成功能将使用内部搜索引擎。 如果是 Promise，则需要您自己执行搜索（这通常是由后端服务进行的）。',\n          defaults: '[]',\n        },\n        {\n          name: 'name',\n          type: 'String',\n          description: '传递给输入框的 name 属性',\n          defaults: 'null',\n        },\n        {\n          name: 'id',\n          type: 'String',\n          description: '传递给输入框的 id 属性',\n          defaults: 'a random string',\n        },\n        {\n          name: 'maxlength',\n          type: 'Number',\n          description: '指定允许输入的最大的字符数量',\n          defaults: 'null',\n        },\n        {\n          name: 'placeholder',\n          type: 'Number',\n          description: '输入框的占位提示',\n          defaults: 'null',\n        },\n        {\n          name: 'dense',\n          type: 'Boolean',\n          description: '使用紧凑型的自动补全组件',\n          defaults: 'false',\n        },\n        {\n          name: 'layout',\n          type: 'String',\n          description: '设置布局方式，请参见下面每种布局的详细说明。',\n          defaults: 'floating',\n        },\n        {\n          offset: true,\n          name: 'layout=\"floating\"',\n          type: 'String',\n          description: '布局方式使用 floating 模式。这是默认的布局。',\n          defaults: '-',\n        },\n        {\n          offset: true,\n          name: 'layout=\"box\"',\n          type: 'String',\n          description: '布局方式使用 boxed 模式。',\n          defaults: '-',\n        },\n        {\n          name: 'openOnFocus',\n          type: 'Boolean',\n          description: '禁用/启用焦点事件。 如果 false，则选项将在按键后立即显示结果。',\n          defaults: 'true',\n        },\n        {\n          name: 'searchProp',\n          type: 'String',\n          description: '如果 option 为 object，则需要指定哪个属性将用于搜索过滤器。',\n          defaults: 'null',\n        },\n        {\n          name: 'searchMethod',\n          type: 'String',\n          description:\n            '选项过滤器的搜索算法。如果传递的 <code>options</code> 属性是 Promise，则此选项不起作用。有关更多详细信息，请参见 <code>md-highlight</code> 的 API。',\n          defaults: 'fuzzy',\n        },\n      ],\n    },\n    events: {\n      headings: ['名称', '描述', '参数'],\n      props: [\n        {\n          name: 'change',\n          description: '用户在输入字段上键入时触发',\n          value: 'The term string',\n        },\n        {\n          name: 'selected',\n          description: '当用户选择一个选项时触发',\n          value: 'The selected option',\n        },\n        {\n          name: 'opened',\n          description: '在打开选项面板时触发',\n          value: 'null',\n        },\n        {\n          name: 'closed',\n          description: '在关闭选项面板时触发',\n          value: 'null',\n        },\n      ],\n    },\n  });\n","/* eslint-disable no-console */\nimport { Attributes, Component, vm } from 'jinge';\n\nimport debounce from 'lodash-es/debounce';\n\nimport { fuzzyHighlight, fuzzySearch } from 'jinge-material/lib/_util/search';\nimport _tpl from './async.html';\n\nconst MOCK_DATA_ALL_COUNTRIES = [\n  {\n    id: 1,\n    name: 'Algeria',\n  },\n  {\n    id: 2,\n    name: 'Argentina',\n  },\n  {\n    id: 3,\n    name: 'Brazil',\n  },\n  {\n    id: 4,\n    name: 'Canada',\n  },\n  {\n    id: 5,\n    name: 'Italy',\n  },\n  {\n    id: 6,\n    name: 'Japan',\n  },\n  {\n    id: 7,\n    name: 'United Kingdom',\n  },\n  {\n    id: 8,\n    name: 'United States',\n  },\n];\n\nfunction mockFetchCountries(v: string) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() < 0.1) {\n        return reject(new Error('server error.'));\n      }\n      if (!v) {\n        resolve(MOCK_DATA_ALL_COUNTRIES.slice());\n      } else {\n        resolve(\n          MOCK_DATA_ALL_COUNTRIES.filter((ci) => {\n            return fuzzySearch(ci.name, v);\n          }).map((ci) => {\n            return {\n              name: ci.name,\n              html: fuzzyHighlight(ci.name, v),\n            };\n          }),\n        );\n      }\n    }, 500);\n  });\n}\n\nexport default class ExampleACAsync extends Component {\n  static template = _tpl;\n\n  value: string;\n  getCountriesPromise: unknown;\n  _delayGetCountries: unknown;\n\n  constructor(attrs: Attributes) {\n    super(attrs);\n    this.value = '';\n    this.getCountriesPromise = null;\n    this._delayGetCountries = debounce(this._getCountries.bind(this), 400);\n  }\n\n  log(v: unknown) {\n    console.log(v);\n  }\n\n  _getCountries() {\n    console.log('will get countries');\n    this.getCountriesPromise = vm(\n      mockFetchCountries(this.value).then(\n        (result) => {\n          console.log('got countries', result);\n          return vm(result);\n        },\n        () => {\n          console.error('failed to get countries due to network error');\n        },\n      ),\n    );\n  }\n}\n","import { Attributes, Component, vm } from 'jinge';\n\nimport _tpl from './box.html';\n\nexport default class ExampleACBox extends Component {\n  static template = _tpl;\n\n  selectedEmployee: unknown;\n  selectedCountry: unknown;\n  countries: string[];\n  employees: string[];\n\n  constructor(attrs: Attributes) {\n    super(attrs);\n    this.selectedCountry = null;\n    this.selectedEmployee = null;\n    this.countries = vm([\n      'Algeria',\n      'Argentina',\n      'Brazil',\n      'Canada',\n      'Italy',\n      'Japan',\n      'United Kingdom',\n      'United States',\n    ]);\n    this.employees = vm([\n      'Jim Halpert',\n      'Dwight Schrute',\n      'Michael Scott',\n      'Pam Beesly',\n      'Angela Martin',\n      'Kelly Kapoor',\n      'Ryan Howard',\n      'Kevin Malone',\n      'Creed Bratton',\n      'Oscar Nunez',\n      'Toby Flenderson',\n      'Stanley Hudson',\n      'Meredith Palmer',\n      'Phyllis Lapin-Vance',\n    ]);\n  }\n}\n","import { Attributes, Component, vm } from 'jinge';\n\nimport _tpl from './search.html';\n\nexport default class ExampleACSearch extends Component {\n  static template = _tpl;\n\n  selectedEmployee: unknown;\n  selectedCountry: unknown;\n  countries: string[];\n  employees: string[];\n\n  constructor(attrs: Attributes) {\n    super(attrs);\n    this.selectedCountry = null;\n    this.selectedEmployee = null;\n    this.countries = vm([\n      'Algeria',\n      'Argentina',\n      'Brazil',\n      'Canada',\n      'Italy',\n      'Japan',\n      'United Kingdom',\n      'United States',\n    ]);\n    this.employees = vm([\n      'Jim Halpert',\n      'Dwight Schrute',\n      'Michael Scott',\n      'Pam Beesly',\n      'Angela Martin',\n      'Kelly Kapoor',\n      'Ryan Howard',\n      'Kevin Malone',\n      'Creed Bratton',\n      'Oscar Nunez',\n      'Toby Flenderson',\n      'Stanley Hudson',\n      'Meredith Palmer',\n      'Phyllis Lapin-Vance',\n    ]);\n  }\n}\n","import { Attributes, Component, vm } from 'jinge';\n\nimport _tpl from './static.html';\n\nexport default class ExampleACStatic extends Component {\n  static template = _tpl;\n\n  selectedEmployee: unknown;\n  selectedCountry: unknown;\n  countries: string[];\n  employees: string[];\n\n  constructor(attrs: Attributes) {\n    super(attrs);\n    this.selectedCountry = undefined;\n    this.selectedEmployee = undefined;\n    this.countries = vm([\n      'Algeria',\n      'Argentina',\n      'Brazil',\n      'Canada',\n      'Italy',\n      'Japan',\n      'United Kingdom',\n      'United States',\n    ]);\n    this.employees = vm([\n      'Jim Halpert',\n      'Dwight Schrute',\n      'Michael Scott',\n      'Pam Beesly',\n      'Angela Martin',\n      'Kelly Kapoor',\n      'Ryan Howard',\n      'Kevin Malone',\n      'Creed Bratton',\n      'Oscar Nunez',\n      'Toby Flenderson',\n      'Stanley Hudson',\n      'Meredith Palmer',\n      'Phyllis Lapin-Vance',\n    ]);\n  }\n\n  log(msg: unknown) {\n    // eslint-disable-next-line no-console\n    console.log(msg);\n  }\n}\n","import { Attributes, Component, vm } from 'jinge';\n\nimport _tpl from './template.html';\n\ninterface Color {\n  name: string;\n  color: string;\n}\nexport default class ExampleACTemplate extends Component {\n  static template = _tpl;\n\n  value: string;\n  selected: Color;\n  colors: Color[];\n\n  constructor(attrs: Attributes) {\n    super(attrs);\n    this.value = null;\n    this.selected = null;\n    this.colors = vm([\n      {\n        name: 'Aqua',\n        color: '#00ffff',\n      },\n      {\n        name: 'Aquamarine',\n        color: '#7fffd4',\n      },\n      {\n        name: 'Azure',\n        color: '#f0ffff',\n      },\n      {\n        name: 'Beige',\n        color: '#f5f5dc',\n      },\n      {\n        name: 'Black',\n        color: '#000000',\n      },\n      {\n        name: 'Blue',\n        color: '#0000ff',\n      },\n      {\n        name: 'Brown',\n        color: '#a52a2a',\n      },\n      {\n        name: 'Crimson',\n        color: '#dc143c',\n      },\n      {\n        name: 'Cyan',\n        color: '#00ffff',\n      },\n      {\n        name: 'Deep Pink',\n        color: '#ff1493',\n      },\n      {\n        name: 'Dim Gray',\n        color: '#696969',\n      },\n      {\n        name: 'Fuchsia',\n        color: '#ff00ff',\n      },\n      {\n        name: 'Gold',\n        color: '#ffd700',\n      },\n      {\n        name: 'Gray',\n        color: '#808080',\n      },\n      {\n        name: 'Green',\n        color: '#008000',\n      },\n      {\n        name: 'Green Yellow',\n        color: '#adff2f',\n      },\n      {\n        name: 'Grey',\n        color: '#808080',\n      },\n      {\n        name: 'Hotpink',\n        color: '#ff69b4',\n      },\n      {\n        name: 'Indigo',\n        color: '#4b0082',\n      },\n      {\n        name: 'Ivory',\n        color: '#fffff0',\n      },\n      {\n        name: 'Khaki',\n        color: '#f0e68c',\n      },\n      {\n        name: 'Lavender',\n        color: '#e6e6fa',\n      },\n      {\n        name: 'Lime',\n        color: '#00ff00',\n      },\n      {\n        name: 'Magenta',\n        color: '#ff00ff',\n      },\n      {\n        name: 'Maroon',\n        color: '#800000',\n      },\n      {\n        name: 'Navy',\n        color: '#000080',\n      },\n      {\n        name: 'Olive',\n        color: '#808000',\n      },\n      {\n        name: 'Orange',\n        color: '#ffa500',\n      },\n      {\n        name: 'Orange Red',\n        color: '#ff4500',\n      },\n      {\n        name: 'Pale Golden Rod',\n        color: '#eee8aa',\n      },\n      {\n        name: 'Pale Green',\n        color: '#98fb98',\n      },\n      {\n        name: 'Pink',\n        color: '#ffc0cb',\n      },\n      {\n        name: 'Purple',\n        color: '#800080',\n      },\n      {\n        name: 'Red',\n        color: '#ff0000',\n      },\n      {\n        name: 'Royal Blue',\n        color: '#4169e1',\n      },\n      {\n        name: 'Sea Green',\n        color: '#2e8b57',\n      },\n      {\n        name: 'Silver',\n        color: '#c0c0c0',\n      },\n      {\n        name: 'Sky Blue',\n        color: '#87ceeb',\n      },\n      {\n        name: 'Slate Blue',\n        color: '#6a5acd',\n      },\n      {\n        name: 'Slate Grey',\n        color: '#708090',\n      },\n      {\n        name: 'Teal',\n        color: '#008080',\n      },\n      {\n        name: 'Turquoise',\n        color: '#40e0d0',\n      },\n      {\n        name: 'Violet',\n        color: '#ee82ee',\n      },\n      {\n        name: 'White',\n        color: '#ffffff',\n      },\n      {\n        name: 'Yellow',\n        color: '#ffff00',\n      },\n    ]);\n  }\n\n  onSelected(item: Color) {\n    this.selected = item;\n  }\n\n  noop() {\n    alert('noop');\n  }\n}\n","import { Attributes, Component, vm } from 'jinge';\n\nimport _tpl from './trigger.html';\n\nexport default class ExampleACTrigger extends Component {\n  static template = _tpl;\n\n  selectedEmployee: unknown;\n  selectedCountry: unknown;\n  countries: string[];\n  employees: string[];\n\n  constructor(attrs: Attributes) {\n    super(attrs);\n    this.selectedCountry = null;\n    this.selectedEmployee = null;\n    this.countries = vm([\n      'Algeria',\n      'Argentina',\n      'Brazil',\n      'Canada',\n      'Italy',\n      'Japan',\n      'United Kingdom',\n      'United States',\n    ]);\n    this.employees = vm([\n      'Jim Halpert',\n      'Dwight Schrute',\n      'Michael Scott',\n      'Pam Beesly',\n      'Angela Martin',\n      'Kelly Kapoor',\n      'Ryan Howard',\n      'Kevin Malone',\n      'Creed Bratton',\n      'Oscar Nunez',\n      'Toby Flenderson',\n      'Stanley Hudson',\n      'Meredith Palmer',\n      'Phyllis Lapin-Vance',\n    ]);\n  }\n}\n","import { Attributes, Component } from 'jinge';\nimport { watchForComponent } from 'jinge-i18n';\nimport _tpl from './index.html';\nimport apis from './api';\n\nimport Static from './examples/static';\n\nimport sourceStatic from './examples/static?example';\nimport Trigger from './examples/trigger';\nimport sourceTrigger from './examples/trigger?example';\nimport Box from './examples/box';\nimport sourceBox from './examples/box?example';\nimport Template from './examples/template';\nimport sourceTemplate from './examples/template?example';\nimport Search from './examples/search';\nimport sourceSearch from './examples/search?example';\nimport Async from './examples/async';\nimport sourceAsync from './examples/async?example';\nimport { Examples } from '~service/interface';\n\nexport class PageAutocomplete extends Component {\n  static template = _tpl;\n\n  api: unknown;\n  _examples: Examples;\n\n  constructor(attrs: Attributes) {\n    super(attrs);\n    watchForComponent(\n      this,\n      () => {\n        this.api = apis();\n      },\n      true,\n    );\n    this._examples = {\n      static: {\n        component: Static,\n        source: sourceStatic,\n      },\n      trigger: {\n        component: Trigger,\n        source: sourceTrigger,\n      },\n      box: {\n        component: Box,\n        source: sourceBox,\n      },\n      template: {\n        component: Template,\n        source: sourceTemplate,\n      },\n      search: {\n        component: Search,\n        source: sourceSearch,\n      },\n      async: {\n        component: Async,\n        source: sourceAsync,\n      },\n    };\n  }\n}\n","import {  createElementWithoutAttrs as createElementWithoutAttrs_jg0402, attrs as attrs_jg0402, __ as ___jg0402, $$ as $$_jg0402, assertRenderResults as assertRenderResults_jg0402 } from 'jinge';\nimport { Autocomplete as Autocomplete_jg0812_08c93b30e5d6 } from 'jinge-material/lib/autocomplete';\nimport { BindHtmlComponent as BindHtmlComponent_jg0812_19c1b8dc4402 } from 'jinge';\nexport default function(component) {\n  const vm_0 = component;\n  return [\n  (() => {\n    const el = createElementWithoutAttrs_jg0402(\n      \"div\",\n      ...(() => {\n        const attrs = attrs_jg0402({\n          [___jg0402]: {\n            debugName: \"attrs_of_<md-autocomplete>\",\n            context: component[___jg0402].context,\n            listeners: {\n              change: {\n                fn: function(...args) {\n                  vm_0.value = args[0]; vm_0.log(vm_0.value); vm_0._delayGetCountries()\n                },\n                opts: null\n              },  opened: {\n                fn: function(...args) {\n                  vm_0._getCountries(...args);\n                },\n                opts: null\n              }\n            },\n            slots: {\n              'default': function(component) {\n                return [\n                (() => {\n                  const el = createElementWithoutAttrs_jg0402(\n                    \"label\",\n                    `Country`\n                  );\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })()\n                ];\n              },\n              'option': function(component) {\n                const vm_1 = component;\n                return [\n                (() => {\n                  const el = createElementWithoutAttrs_jg0402(\n                    \"span\",\n                    ...(() => {\n                      const attrs = attrs_jg0402({\n                        [___jg0402]: {\n                          debugName: \"attrs_of_<bind-html>\",\n                          context: component[___jg0402].context,\n                        },\n                        content: undefined\n                      });\n                      const fn_0 = () => {\n                        attrs.content = vm_1.option?.html || vm_1.option?.name;\n                      };\n                      fn_0();\n                      vm_1[$$_jg0402].__watch([\"option\",\"html\"], fn_0, component[$$_jg0402]);\n                      vm_1[$$_jg0402].__watch([\"option\",\"name\"], fn_0, component[$$_jg0402]);\n                      const el = BindHtmlComponent_jg0812_19c1b8dc4402.create(attrs);\n                      component[___jg0402].nonRootCompNodes.push(el);\n                      return assertRenderResults_jg0402(el.__render());\n                    })()\n                  );\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })()\n                ];\n              }\n            }\n          },\n          value: undefined,\n          options: undefined\n        });\n        const fn_0 = () => {\n          attrs.value = vm_0.value;\n        };\n        fn_0();\n        vm_0[$$_jg0402].__watch([\"value\"], fn_0, component[$$_jg0402]);\n        const fn_1 = () => {\n          attrs.options = vm_0.getCountriesPromise;\n        };\n        fn_1();\n        vm_0[$$_jg0402].__watch([\"getCountriesPromise\"], fn_1, component[$$_jg0402]);\n        const el = Autocomplete_jg0812_08c93b30e5d6.create(attrs);\n        component[___jg0402].nonRootCompNodes.push(el);\n        return assertRenderResults_jg0402(el.__render());\n      })()\n    );\n    component[___jg0402].rootNodes.push(el);\n    return el;\n  })()\n  ];\n}","import {  createElementWithoutAttrs as createElementWithoutAttrs_jg0402, attrs as attrs_jg0402, __ as ___jg0402, $$ as $$_jg0402, assertRenderResults as assertRenderResults_jg0402, createElement as createElement_jg0402 } from 'jinge';\nimport { Autocomplete as Autocomplete_jg0812_08c93b30e5d6 } from 'jinge-material/lib/autocomplete';\nimport { Toolbar as Toolbar_jg0812_35827a1ee5a3 } from 'jinge-material/lib/toolbar';\nimport { Button as Button_jg0812_a1a4c367aff5 } from 'jinge-material/lib/button';\nimport { default as Component_default_0_jg0812_917205805838 } from 'jinge-material-icons/lib/Menu.js';\nimport { default as Component_default_0_jg0812_5f169af20744 } from 'jinge-material-icons/lib/Refresh.js';\nimport { default as Component_default_0_jg0812_6615c39bd6ac } from 'jinge-material-icons/lib/MoreVert.js';\nexport default function(component) {\n  const vm_0 = component;\n  return [\n  (() => {\n    const el = createElementWithoutAttrs_jg0402(\n      \"div\",\n      ...(() => {\n        const attrs = attrs_jg0402({\n          [___jg0402]: {\n            debugName: \"attrs_of_<md-autocomplete>\",\n            context: component[___jg0402].context,\n            listeners: {\n              change: {\n                fn: function(...args) {\n                  vm_0.selectedEmployee = args[0]\n                },\n                opts: null\n              }\n            },\n            slots: {\n              'default': function(component) {\n                return [\n                (() => {\n                  const el = createElementWithoutAttrs_jg0402(\n                    \"label\",\n                    `Employees`\n                  );\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })()\n                ];\n              }\n            }\n          },\n          value: undefined,\n          options: undefined,\n          layout: `box`,\n          dense: true\n        });\n        const fn_0 = () => {\n          attrs.value = vm_0.selectedEmployee;\n        };\n        fn_0();\n        vm_0[$$_jg0402].__watch([\"selectedEmployee\"], fn_0, component[$$_jg0402]);\n        const fn_1 = () => {\n          attrs.options = vm_0.employees;\n        };\n        fn_1();\n        vm_0[$$_jg0402].__watch([\"employees\"], fn_1, component[$$_jg0402]);\n        const el = Autocomplete_jg0812_08c93b30e5d6.create(attrs);\n        component[___jg0402].nonRootCompNodes.push(el);\n        return assertRenderResults_jg0402(el.__render());\n      })(),\n      ...(() => {\n        const attrs = attrs_jg0402({\n          [___jg0402]: {\n            debugName: \"attrs_of_<md-toolbar>\",\n            context: component[___jg0402].context,\n            slots: {\n              'default': function(component) {\n                return [\n                (() => {\n                  const el = createElement_jg0402(\n                    \"div\",\n                    {\n                      class: `md-toolbar-row`\n                    },\n                    createElement_jg0402(\n                      \"div\",\n                      {\n                        class: `md-toolbar-section-start`\n                      },\n                      ...(() => {\n                        const attrs = attrs_jg0402({\n                          [___jg0402]: {\n                            debugName: \"attrs_of_<md-button>\",\n                            context: component[___jg0402].context,\n                            slots: {\n                              'default': function(component) {\n                                return [\n                                ...(() => {\n                                  const attrs = attrs_jg0402({\n                                    [___jg0402]: {\n                                      debugName: \"attrs_of_<md-icon-menu>\",\n                                      context: component[___jg0402].context,\n                                    },\n                                  });\n                                  const el = Component_default_0_jg0812_917205805838.create(attrs);\n                                  component[___jg0402].rootNodes.push(el);\n                                  return assertRenderResults_jg0402(el.__render());\n                                })()\n                                ];\n                              }\n                            }\n                          },\n                          class: `md-icon-button md-on-primary`\n                        });\n                        const el = Button_jg0812_a1a4c367aff5.create(attrs);\n                        component[___jg0402].nonRootCompNodes.push(el);\n                        return assertRenderResults_jg0402(el.__render());\n                      })()\n                    ),\n                    ...(() => {\n                      const attrs = attrs_jg0402({\n                        [___jg0402]: {\n                          debugName: \"attrs_of_<md-autocomplete>\",\n                          context: component[___jg0402].context,\n                          listeners: {\n                            change: {\n                              fn: function(...args) {\n                                vm_0.selectedEmployee = args[0]\n                              },\n                              opts: null\n                            }\n                          },\n                          slots: {\n                            'default': function(component) {\n                              return [\n                              (() => {\n                                const el = createElementWithoutAttrs_jg0402(\n                                  \"label\",\n                                  `Search...`\n                                );\n                                component[___jg0402].rootNodes.push(el);\n                                return el;\n                              })()\n                              ];\n                            }\n                          }\n                        },\n                        value: undefined,\n                        options: undefined,\n                        class: `search`,\n                        layout: `box`\n                      });\n                      const fn_0 = () => {\n                        attrs.value = vm_0.selectedEmployee;\n                      };\n                      fn_0();\n                      vm_0[$$_jg0402].__watch([\"selectedEmployee\"], fn_0, component[$$_jg0402]);\n                      const fn_1 = () => {\n                        attrs.options = vm_0.employees;\n                      };\n                      fn_1();\n                      vm_0[$$_jg0402].__watch([\"employees\"], fn_1, component[$$_jg0402]);\n                      const el = Autocomplete_jg0812_08c93b30e5d6.create(attrs);\n                      component[___jg0402].nonRootCompNodes.push(el);\n                      return assertRenderResults_jg0402(el.__render());\n                    })(),\n                    createElement_jg0402(\n                      \"div\",\n                      {\n                        class: `md-toolbar-section-end`\n                      },\n                      ...(() => {\n                        const attrs = attrs_jg0402({\n                          [___jg0402]: {\n                            debugName: \"attrs_of_<md-button>\",\n                            context: component[___jg0402].context,\n                            slots: {\n                              'default': function(component) {\n                                return [\n                                ...(() => {\n                                  const attrs = attrs_jg0402({\n                                    [___jg0402]: {\n                                      debugName: \"attrs_of_<md-icon-refresh>\",\n                                      context: component[___jg0402].context,\n                                    },\n                                  });\n                                  const el = Component_default_0_jg0812_5f169af20744.create(attrs);\n                                  component[___jg0402].rootNodes.push(el);\n                                  return assertRenderResults_jg0402(el.__render());\n                                })()\n                                ];\n                              }\n                            }\n                          },\n                          class: `md-icon-button md-on-primary`\n                        });\n                        const el = Button_jg0812_a1a4c367aff5.create(attrs);\n                        component[___jg0402].nonRootCompNodes.push(el);\n                        return assertRenderResults_jg0402(el.__render());\n                      })(),\n                      ...(() => {\n                        const attrs = attrs_jg0402({\n                          [___jg0402]: {\n                            debugName: \"attrs_of_<md-button>\",\n                            context: component[___jg0402].context,\n                            slots: {\n                              'default': function(component) {\n                                return [\n                                ...(() => {\n                                  const attrs = attrs_jg0402({\n                                    [___jg0402]: {\n                                      debugName: \"attrs_of_<md-icon-more_vert>\",\n                                      context: component[___jg0402].context,\n                                    },\n                                  });\n                                  const el = Component_default_0_jg0812_6615c39bd6ac.create(attrs);\n                                  component[___jg0402].rootNodes.push(el);\n                                  return assertRenderResults_jg0402(el.__render());\n                                })()\n                                ];\n                              }\n                            }\n                          },\n                          class: `md-icon-button md-on-primary`\n                        });\n                        const el = Button_jg0812_a1a4c367aff5.create(attrs);\n                        component[___jg0402].nonRootCompNodes.push(el);\n                        return assertRenderResults_jg0402(el.__render());\n                      })()\n                    )\n                  );\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })()\n                ];\n              }\n            }\n          },\n          class: `md-primary`\n        });\n        const el = Toolbar_jg0812_35827a1ee5a3.create(attrs);\n        component[___jg0402].nonRootCompNodes.push(el);\n        return assertRenderResults_jg0402(el.__render());\n      })()\n    );\n    component[___jg0402].rootNodes.push(el);\n    return el;\n  })()\n  ];\n}","import {  createElementWithoutAttrs as createElementWithoutAttrs_jg0402, attrs as attrs_jg0402, __ as ___jg0402, $$ as $$_jg0402, assertRenderResults as assertRenderResults_jg0402 } from 'jinge';\nimport { Autocomplete as Autocomplete_jg0812_08c93b30e5d6 } from 'jinge-material/lib/autocomplete';\nimport { HighlightText as HighlightText_jg0812_0280caf592ac } from 'jinge-material/lib/highlight';\nexport default function(component) {\n  const vm_0 = component;\n  return [\n  (() => {\n    const el = createElementWithoutAttrs_jg0402(\n      \"div\",\n      createElementWithoutAttrs_jg0402(\n        \"strong\",\n        `Fuzzy Search:`\n      ),\n      ...(() => {\n        const attrs = attrs_jg0402({\n          [___jg0402]: {\n            debugName: \"attrs_of_<md-autocomplete>\",\n            context: component[___jg0402].context,\n            slots: {\n              'default': function(component) {\n                return [\n                (() => {\n                  const el = createElementWithoutAttrs_jg0402(\n                    \"label\",\n                    `Manager`\n                  );\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })()\n                ];\n              },\n              'option': function(component) {\n                const vm_1 = component;\n                return [\n                ...(() => {\n                  const attrs = attrs_jg0402({\n                    [___jg0402]: {\n                      debugName: \"attrs_of_<md-highlight>\",\n                      context: component[___jg0402].context,\n                    },\n                    term: undefined,\n                    text: undefined\n                  });\n                  const fn_0 = () => {\n                    attrs.term = vm_0.term;\n                  };\n                  fn_0();\n                  vm_0[$$_jg0402].__watch([\"term\"], fn_0, component[$$_jg0402]);\n                  const fn_1 = () => {\n                    attrs.text = vm_0.option;\n                  };\n                  fn_1();\n                  vm_0[$$_jg0402].__watch([\"option\"], fn_1, component[$$_jg0402]);\n                  const el = HighlightText_jg0812_0280caf592ac.create(attrs);\n                  component[___jg0402].rootNodes.push(el);\n                  return assertRenderResults_jg0402(el.__render());\n                })()\n                ];\n              }\n            }\n          },\n          value: undefined,\n          options: undefined\n        });\n        const fn_0 = () => {\n          attrs.value = vm_0.selectedEmployee;\n        };\n        fn_0();\n        vm_0[$$_jg0402].__watch([\"selectedEmployee\"], fn_0, component[$$_jg0402]);\n        const fn_1 = () => {\n          attrs.options = vm_0.employees;\n        };\n        fn_1();\n        vm_0[$$_jg0402].__watch([\"employees\"], fn_1, component[$$_jg0402]);\n        const el = Autocomplete_jg0812_08c93b30e5d6.create(attrs);\n        component[___jg0402].nonRootCompNodes.push(el);\n        return assertRenderResults_jg0402(el.__render());\n      })(),\n      createElementWithoutAttrs_jg0402(\n        \"strong\",\n        `Includes Search:`\n      ),\n      ...(() => {\n        const attrs = attrs_jg0402({\n          [___jg0402]: {\n            debugName: \"attrs_of_<md-autocomplete>\",\n            context: component[___jg0402].context,\n            slots: {\n              'default': function(component) {\n                return [\n                (() => {\n                  const el = createElementWithoutAttrs_jg0402(\n                    \"label\",\n                    `Country`\n                  );\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })()\n                ];\n              },\n              'option': function(component) {\n                const vm_1 = component;\n                return [\n                ...(() => {\n                  const attrs = attrs_jg0402({\n                    [___jg0402]: {\n                      debugName: \"attrs_of_<md-highlight>\",\n                      context: component[___jg0402].context,\n                    },\n                    term: undefined,\n                    text: undefined,\n                    searchMethod: `includes`\n                  });\n                  const fn_0 = () => {\n                    attrs.term = vm_0.term;\n                  };\n                  fn_0();\n                  vm_0[$$_jg0402].__watch([\"term\"], fn_0, component[$$_jg0402]);\n                  const fn_1 = () => {\n                    attrs.text = vm_0.option;\n                  };\n                  fn_1();\n                  vm_0[$$_jg0402].__watch([\"option\"], fn_1, component[$$_jg0402]);\n                  const el = HighlightText_jg0812_0280caf592ac.create(attrs);\n                  component[___jg0402].rootNodes.push(el);\n                  return assertRenderResults_jg0402(el.__render());\n                })()\n                ];\n              }\n            }\n          },\n          value: undefined,\n          options: undefined,\n          searchMethod: `includes`\n        });\n        const fn_0 = () => {\n          attrs.value = vm_0.selectedCountry;\n        };\n        fn_0();\n        vm_0[$$_jg0402].__watch([\"selectedCountry\"], fn_0, component[$$_jg0402]);\n        const fn_1 = () => {\n          attrs.options = vm_0.countries;\n        };\n        fn_1();\n        vm_0[$$_jg0402].__watch([\"countries\"], fn_1, component[$$_jg0402]);\n        const el = Autocomplete_jg0812_08c93b30e5d6.create(attrs);\n        component[___jg0402].nonRootCompNodes.push(el);\n        return assertRenderResults_jg0402(el.__render());\n      })(),\n      createElementWithoutAttrs_jg0402(\n        \"strong\",\n        `StartsWith Search:`\n      ),\n      ...(() => {\n        const attrs = attrs_jg0402({\n          [___jg0402]: {\n            debugName: \"attrs_of_<md-autocomplete>\",\n            context: component[___jg0402].context,\n            slots: {\n              'default': function(component) {\n                return [\n                (() => {\n                  const el = createElementWithoutAttrs_jg0402(\n                    \"label\",\n                    `Country`\n                  );\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })()\n                ];\n              },\n              'option': function(component) {\n                const vm_1 = component;\n                return [\n                ...(() => {\n                  const attrs = attrs_jg0402({\n                    [___jg0402]: {\n                      debugName: \"attrs_of_<md-highlight>\",\n                      context: component[___jg0402].context,\n                    },\n                    term: undefined,\n                    text: undefined,\n                    searchMethod: `starts`\n                  });\n                  const fn_0 = () => {\n                    attrs.term = vm_0.term;\n                  };\n                  fn_0();\n                  vm_0[$$_jg0402].__watch([\"term\"], fn_0, component[$$_jg0402]);\n                  const fn_1 = () => {\n                    attrs.text = vm_0.option;\n                  };\n                  fn_1();\n                  vm_0[$$_jg0402].__watch([\"option\"], fn_1, component[$$_jg0402]);\n                  const el = HighlightText_jg0812_0280caf592ac.create(attrs);\n                  component[___jg0402].rootNodes.push(el);\n                  return assertRenderResults_jg0402(el.__render());\n                })()\n                ];\n              }\n            }\n          },\n          value: undefined,\n          options: undefined,\n          searchMethod: `starts`\n        });\n        const fn_0 = () => {\n          attrs.value = vm_0.selectedCountry;\n        };\n        fn_0();\n        vm_0[$$_jg0402].__watch([\"selectedCountry\"], fn_0, component[$$_jg0402]);\n        const fn_1 = () => {\n          attrs.options = vm_0.countries;\n        };\n        fn_1();\n        vm_0[$$_jg0402].__watch([\"countries\"], fn_1, component[$$_jg0402]);\n        const el = Autocomplete_jg0812_08c93b30e5d6.create(attrs);\n        component[___jg0402].nonRootCompNodes.push(el);\n        return assertRenderResults_jg0402(el.__render());\n      })()\n    );\n    component[___jg0402].rootNodes.push(el);\n    return el;\n  })()\n  ];\n}","import {  createElementWithoutAttrs as createElementWithoutAttrs_jg0402, attrs as attrs_jg0402, __ as ___jg0402, $$ as $$_jg0402, assertRenderResults as assertRenderResults_jg0402 } from 'jinge';\nimport { Autocomplete as Autocomplete_jg0812_08c93b30e5d6 } from 'jinge-material/lib/autocomplete';\nexport default function(component) {\n  const vm_0 = component;\n  return [\n  (() => {\n    const el = createElementWithoutAttrs_jg0402(\n      \"div\",\n      ...(() => {\n        const attrs = attrs_jg0402({\n          [___jg0402]: {\n            debugName: \"attrs_of_<md-autocomplete>\",\n            context: component[___jg0402].context,\n            listeners: {\n              change: {\n                fn: function(...args) {\n                  vm_0.selectedCountry = args[0]; vm_0.log(vm_0.selectedCountry)\n                },\n                opts: null\n              }\n            },\n            slots: {\n              'default': function(component) {\n                return [\n                (() => {\n                  const el = createElementWithoutAttrs_jg0402(\n                    \"label\",\n                    `Country`\n                  );\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })()\n                ];\n              }\n            }\n          },\n          value: undefined,\n          options: undefined\n        });\n        const fn_0 = () => {\n          attrs.value = vm_0.selectedCountry;\n        };\n        fn_0();\n        vm_0[$$_jg0402].__watch([\"selectedCountry\"], fn_0, component[$$_jg0402]);\n        const fn_1 = () => {\n          attrs.options = vm_0.countries;\n        };\n        fn_1();\n        vm_0[$$_jg0402].__watch([\"countries\"], fn_1, component[$$_jg0402]);\n        const el = Autocomplete_jg0812_08c93b30e5d6.create(attrs);\n        component[___jg0402].nonRootCompNodes.push(el);\n        return assertRenderResults_jg0402(el.__render());\n      })(),\n      ...(() => {\n        const attrs = attrs_jg0402({\n          [___jg0402]: {\n            debugName: \"attrs_of_<md-autocomplete>\",\n            context: component[___jg0402].context,\n            listeners: {\n              change: {\n                fn: function(...args) {\n                  vm_0.selectedEmployee = args[0]; vm_0.log(vm_0.selectedEmployee)\n                },\n                opts: null\n              }\n            },\n            slots: {\n              'default': function(component) {\n                return [\n                (() => {\n                  const el = createElementWithoutAttrs_jg0402(\n                    \"label\",\n                    `Employees`\n                  );\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })()\n                ];\n              }\n            }\n          },\n          value: undefined,\n          options: undefined,\n          dense: true\n        });\n        const fn_0 = () => {\n          attrs.value = vm_0.selectedEmployee;\n        };\n        fn_0();\n        vm_0[$$_jg0402].__watch([\"selectedEmployee\"], fn_0, component[$$_jg0402]);\n        const fn_1 = () => {\n          attrs.options = vm_0.employees;\n        };\n        fn_1();\n        vm_0[$$_jg0402].__watch([\"employees\"], fn_1, component[$$_jg0402]);\n        const el = Autocomplete_jg0812_08c93b30e5d6.create(attrs);\n        component[___jg0402].nonRootCompNodes.push(el);\n        return assertRenderResults_jg0402(el.__render());\n      })()\n    );\n    component[___jg0402].rootNodes.push(el);\n    return el;\n  })()\n  ];\n}","import {  createElement as createElement_jg0402, attrs as attrs_jg0402, __ as ___jg0402, setStyleAttribute as setStyleAttribute_jg0402, $$ as $$_jg0402, assertRenderResults as assertRenderResults_jg0402, createTextNode as createTextNode_jg0402, setText as setText_jg0402, createElementWithoutAttrs as createElementWithoutAttrs_jg0402, addEvent as addEvent_jg0402, textRenderFn as textRenderFn_jg0402 } from 'jinge';\nimport { Autocomplete as Autocomplete_jg0812_08c93b30e5d6 } from 'jinge-material/lib/autocomplete';\nimport { HighlightText as HighlightText_jg0812_0280caf592ac } from 'jinge-material/lib/highlight';\nimport { IfComponent as IfComponent_jg0812_19c1b8dc4402 } from 'jinge';\nimport { default as style_jg0801 } from './template.scss';\nexport default function(component) {\n  const vm_0 = component;\n  return [\n  (() => {\n    const el = createElement_jg0402(\n      \"div\",\n      {\n        class: style_jg0801.demo\n      },\n      ...(() => {\n        const attrs = attrs_jg0402({\n          [___jg0402]: {\n            debugName: \"attrs_of_<md-autocomplete>\",\n            context: component[___jg0402].context,\n            listeners: {\n              change: {\n                fn: function(...args) {\n                  vm_0.value = args[0]\n                },\n                opts: null\n              },  selected: {\n                fn: function(...args) {\n                  vm_0.onSelected(...args);\n                },\n                opts: null\n              }\n            },\n            slots: {\n              'option': function(component) {\n                const vm_1 = component;\n                return [\n                (() => {\n                  const el = createElement_jg0402(\n                    \"span\",\n                    {\n                      class: `color`\n                    },\n                  );\n                  const fn_0 = () => {\n                    setStyleAttribute_jg0402(el, `background-color: ${ vm_1.option?.color };`);\n                  };\n                  fn_0();\n                  vm_1[$$_jg0402].__watch([\"option\",\"color\"], fn_0, component[$$_jg0402]);\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })(),\n                ...(() => {\n                  const attrs = attrs_jg0402({\n                    [___jg0402]: {\n                      debugName: \"attrs_of_<md-highlight>\",\n                      context: component[___jg0402].context,\n                    },\n                    term: undefined,\n                    text: undefined\n                  });\n                  const fn_0 = () => {\n                    attrs.term = vm_1.term;\n                  };\n                  fn_0();\n                  vm_1[$$_jg0402].__watch([\"term\"], fn_0, component[$$_jg0402]);\n                  const fn_1 = () => {\n                    attrs.text = vm_1.option?.name;\n                  };\n                  fn_1();\n                  vm_1[$$_jg0402].__watch([\"option\",\"name\"], fn_1, component[$$_jg0402]);\n                  const el = HighlightText_jg0812_0280caf592ac.create(attrs);\n                  component[___jg0402].rootNodes.push(el);\n                  return assertRenderResults_jg0402(el.__render());\n                })()\n                ];\n              },\n              'empty': function(component) {\n                const vm_1 = component;\n                return [\n                (() => {\n                  const el = createTextNode_jg0402();\n                  const fn_0 = () => {\n                    setText_jg0402(el, `No colors matching \"${ vm_1.term }\" were found.`);\n                  };\n                  fn_0();\n                  vm_1[$$_jg0402].__watch([\"term\"], fn_0, component[$$_jg0402]);\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })(),\n                (() => {\n                  const el = createElementWithoutAttrs_jg0402(\n                    \"a\",\n                    `Create a new`\n                  );\n                  addEvent_jg0402(el, 'click', function(...args) {\n                    vm_0.noop()\n                  });\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })(),\n                textRenderFn_jg0402(component, `one!`)\n                ];\n              },\n              'default': function(component) {\n                return [\n                (() => {\n                  const el = createElementWithoutAttrs_jg0402(\n                    \"label\",\n                    `Color`\n                  );\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })(),\n                ...(() => {\n                  const attrs = attrs_jg0402({\n                    [___jg0402]: {\n                      debugName: \"attrs_of_<if>\",\n                      context: component[___jg0402].context,\n                      slots: {\n                        'default': function(component) {\n                          return [\n                          (() => {\n                            const el = createElement_jg0402(\n                              \"div\",\n                              {\n                                class: `md-helper-text`\n                              },\n                              createElementWithoutAttrs_jg0402(\n                                \"strong\",\n                                `Selected Color:`\n                              ),\n                              (() => {\n                                const el = createElement_jg0402(\n                                  \"span\",\n                                  {\n                                    class: `color`\n                                  },\n                                );\n                                const fn_0 = () => {\n                                  setStyleAttribute_jg0402(el, `background-color: ${vm_0.selected?.color};`);\n                                };\n                                fn_0();\n                                vm_0[$$_jg0402].__watch([\"selected\",\"color\"], fn_0, component[$$_jg0402]);\n                                return el;\n                              })()\n                            );\n                            component[___jg0402].rootNodes.push(el);\n                            return el;\n                          })()\n                          ];\n                        }\n                      }\n                    },\n                    expect: undefined\n                  });\n                  const fn_0 = () => {\n                    attrs.expect = vm_0.selected;\n                  };\n                  fn_0();\n                  vm_0[$$_jg0402].__watch([\"selected\"], fn_0, component[$$_jg0402]);\n                  const el = IfComponent_jg0812_19c1b8dc4402.create(attrs);\n                  component[___jg0402].rootNodes.push(el);\n                  return assertRenderResults_jg0402(el.__render());\n                })()\n                ];\n              }\n            }\n          },\n          value: undefined,\n          options: undefined,\n          searchProp: `name`\n        });\n        const fn_0 = () => {\n          attrs.value = vm_0.value;\n        };\n        fn_0();\n        vm_0[$$_jg0402].__watch([\"value\"], fn_0, component[$$_jg0402]);\n        const fn_1 = () => {\n          attrs.options = vm_0.colors;\n        };\n        fn_1();\n        vm_0[$$_jg0402].__watch([\"colors\"], fn_1, component[$$_jg0402]);\n        const el = Autocomplete_jg0812_08c93b30e5d6.create(attrs);\n        component[___jg0402].nonRootCompNodes.push(el);\n        return assertRenderResults_jg0402(el.__render());\n      })()\n    );\n    component[___jg0402].rootNodes.push(el);\n    return el;\n  })()\n  ];\n}","import {  createElementWithoutAttrs as createElementWithoutAttrs_jg0402, attrs as attrs_jg0402, __ as ___jg0402, $$ as $$_jg0402, assertRenderResults as assertRenderResults_jg0402 } from 'jinge';\nimport { Autocomplete as Autocomplete_jg0812_08c93b30e5d6 } from 'jinge-material/lib/autocomplete';\nexport default function(component) {\n  const vm_0 = component;\n  return [\n  (() => {\n    const el = createElementWithoutAttrs_jg0402(\n      \"div\",\n      ...(() => {\n        const attrs = attrs_jg0402({\n          [___jg0402]: {\n            debugName: \"attrs_of_<md-autocomplete>\",\n            context: component[___jg0402].context,\n            listeners: {\n              change: {\n                fn: function(...args) {\n                  vm_0.selectedCountry = args[0];\n                },\n                opts: null\n              }\n            },\n            slots: {\n              'default': function(component) {\n                return [\n                (() => {\n                  const el = createElementWithoutAttrs_jg0402(\n                    \"label\",\n                    `Country`\n                  );\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })()\n                ];\n              }\n            }\n          },\n          value: undefined,\n          options: undefined\n        });\n        const fn_0 = () => {\n          attrs.value = vm_0.selectedCountry;\n        };\n        fn_0();\n        vm_0[$$_jg0402].__watch([\"selectedCountry\"], fn_0, component[$$_jg0402]);\n        const fn_1 = () => {\n          attrs.options = vm_0.countries;\n        };\n        fn_1();\n        vm_0[$$_jg0402].__watch([\"countries\"], fn_1, component[$$_jg0402]);\n        const el = Autocomplete_jg0812_08c93b30e5d6.create(attrs);\n        component[___jg0402].nonRootCompNodes.push(el);\n        return assertRenderResults_jg0402(el.__render());\n      })(),\n      ...(() => {\n        const attrs = attrs_jg0402({\n          [___jg0402]: {\n            debugName: \"attrs_of_<md-autocomplete>\",\n            context: component[___jg0402].context,\n            listeners: {\n              change: {\n                fn: function(...args) {\n                  vm_0.selectedEmployee = args[0];\n                },\n                opts: null\n              }\n            },\n            slots: {\n              'default': function(component) {\n                return [\n                (() => {\n                  const el = createElementWithoutAttrs_jg0402(\n                    \"label\",\n                    `Employees`\n                  );\n                  component[___jg0402].rootNodes.push(el);\n                  return el;\n                })()\n                ];\n              }\n            }\n          },\n          value: undefined,\n          options: undefined,\n          openOnFocus: false\n        });\n        const fn_0 = () => {\n          attrs.value = vm_0.selectedEmployee;\n        };\n        fn_0();\n        vm_0[$$_jg0402].__watch([\"selectedEmployee\"], fn_0, component[$$_jg0402]);\n        const fn_1 = () => {\n          attrs.options = vm_0.employees;\n        };\n        fn_1();\n        vm_0[$$_jg0402].__watch([\"employees\"], fn_1, component[$$_jg0402]);\n        const el = Autocomplete_jg0812_08c93b30e5d6.create(attrs);\n        component[___jg0402].nonRootCompNodes.push(el);\n        return assertRenderResults_jg0402(el.__render());\n      })()\n    );\n    component[___jg0402].rootNodes.push(el);\n    return el;\n  })()\n  ];\n}","import {  attrs as attrs_jg0402, __ as ___jg0402, createElement as createElement_jg0402, class2str as class2str_jg0402, createElementWithoutAttrs as createElementWithoutAttrs_jg0402, assertRenderResults as assertRenderResults_jg0402, $$ as $$_jg0402 } from 'jinge';\nimport { HighlightText as HighlightText_jg0812_0280caf592ac } from 'jinge-material/lib/highlight';\nimport { PageContainer as PageContainer_jg0801, CodeExample as CodeExample_jg0801, ApiTable as ApiTable_jg0801, ApiItem as ApiItem_jg0801, NoteBlock as NoteBlock_jg0801 } from '../../../components';\nimport { default as style_jg0801 } from './index.scss';\nexport default function(component) {\n  const vm_0 = component;\n  return [\n  ...(() => {\n    const attrs = attrs_jg0402({\n      [___jg0402]: {\n        debugName: \"attrs_of_<PageContainer>\",\n        context: component[___jg0402].context,\n        slots: {\n          'default': function(component) {\n            return [\n            (() => {\n              const el = createElement_jg0402(\n                \"div\",\n                {\n                  class: class2str_jg0402(['page-container-section', style_jg0801.searchAlgorithms])\n                },\n                createElementWithoutAttrs_jg0402(\n                  \"h2\",\n                  `搜索算法`\n                ),\n                createElementWithoutAttrs_jg0402(\n                  \"p\",\n                  `自动补全组件可以使用 3 种搜索算法：`,\n                  createElement_jg0402(\n                    \"a\",\n                    {\n                      href: `https://en.wikipedia.org/wiki/roximate_string_matching`,\n                      target: `_blank`\n                    },\n                    `fuzzy`\n                  ),\n                  `，includes 和 starts。`\n                ),\n                createElement_jg0402(\n                  \"div\",\n                  {\n                    class: `md-layout md-gutter`\n                  },\n                  createElement_jg0402(\n                    \"div\",\n                    {\n                      class: `md-layout-item md-size-33`\n                    },\n                    createElementWithoutAttrs_jg0402(\n                      \"p\",\n                      createElementWithoutAttrs_jg0402(\n                        \"strong\",\n                        `Fuzzy search`\n                      ),\n                      `- search term:`,\n                      createElementWithoutAttrs_jg0402(\n                        \"code\",\n                        `pam`\n                      )\n                    ),\n                    createElementWithoutAttrs_jg0402(\n                      \"div\",\n                      `Matches:`,\n                      createElementWithoutAttrs_jg0402(\n                        \"ul\",\n                        createElementWithoutAttrs_jg0402(\n                          \"li\",\n                          ...(() => {\n                            const attrs = attrs_jg0402({\n                              [___jg0402]: {\n                                debugName: \"attrs_of_<md-highlight>\",\n                                context: component[___jg0402].context,\n                              },\n                              term: `pam`,\n                              text: `Pam Beesly`\n                            });\n                            const el = HighlightText_jg0812_0280caf592ac.create(attrs);\n                            component[___jg0402].nonRootCompNodes.push(el);\n                            return assertRenderResults_jg0402(el.__render());\n                          })()\n                        ),\n                        createElementWithoutAttrs_jg0402(\n                          \"li\",\n                          ...(() => {\n                            const attrs = attrs_jg0402({\n                              [___jg0402]: {\n                                debugName: \"attrs_of_<md-highlight>\",\n                                context: component[___jg0402].context,\n                              },\n                              term: `pam`,\n                              text: `Meredith Palmer`\n                            });\n                            const el = HighlightText_jg0812_0280caf592ac.create(attrs);\n                            component[___jg0402].nonRootCompNodes.push(el);\n                            return assertRenderResults_jg0402(el.__render());\n                          })()\n                        )\n                      )\n                    )\n                  ),\n                  createElement_jg0402(\n                    \"div\",\n                    {\n                      class: `md-layout-item md-size-33`\n                    },\n                    createElementWithoutAttrs_jg0402(\n                      \"p\",\n                      createElementWithoutAttrs_jg0402(\n                        \"strong\",\n                        `Includes Search`\n                      ),\n                      `- search term:`,\n                      createElementWithoutAttrs_jg0402(\n                        \"code\",\n                        `pam`\n                      )\n                    ),\n                    createElementWithoutAttrs_jg0402(\n                      \"div\",\n                      `Matches:`,\n                      createElementWithoutAttrs_jg0402(\n                        \"ul\",\n                        createElementWithoutAttrs_jg0402(\n                          \"li\",\n                          ...(() => {\n                            const attrs = attrs_jg0402({\n                              [___jg0402]: {\n                                debugName: \"attrs_of_<md-highlight>\",\n                                context: component[___jg0402].context,\n                              },\n                              term: `pam`,\n                              searchMethod: `includes`,\n                              text: `Pam Beesly`\n                            });\n                            const el = HighlightText_jg0812_0280caf592ac.create(attrs);\n                            component[___jg0402].nonRootCompNodes.push(el);\n                            return assertRenderResults_jg0402(el.__render());\n                          })()\n                        ),\n                        createElementWithoutAttrs_jg0402(\n                          \"li\",\n                          ...(() => {\n                            const attrs = attrs_jg0402({\n                              [___jg0402]: {\n                                debugName: \"attrs_of_<md-highlight>\",\n                                context: component[___jg0402].context,\n                              },\n                              term: `pam`,\n                              searchMethod: `includes`,\n                              text: `Ki Pam Beesly`\n                            });\n                            const el = HighlightText_jg0812_0280caf592ac.create(attrs);\n                            component[___jg0402].nonRootCompNodes.push(el);\n                            return assertRenderResults_jg0402(el.__render());\n                          })()\n                        )\n                      )\n                    )\n                  ),\n                  createElement_jg0402(\n                    \"div\",\n                    {\n                      class: `md-layout-item md-size-33`\n                    },\n                    createElementWithoutAttrs_jg0402(\n                      \"p\",\n                      createElementWithoutAttrs_jg0402(\n                        \"strong\",\n                        `Starts Search`\n                      ),\n                      `- search term:`,\n                      createElementWithoutAttrs_jg0402(\n                        \"code\",\n                        `pam`\n                      )\n                    ),\n                    createElementWithoutAttrs_jg0402(\n                      \"div\",\n                      `Matches:`,\n                      createElementWithoutAttrs_jg0402(\n                        \"ul\",\n                        createElementWithoutAttrs_jg0402(\n                          \"li\",\n                          ...(() => {\n                            const attrs = attrs_jg0402({\n                              [___jg0402]: {\n                                debugName: \"attrs_of_<md-highlight>\",\n                                context: component[___jg0402].context,\n                              },\n                              searchMethod: `starts`,\n                              term: `pam`,\n                              text: `Pam Beesly`\n                            });\n                            const el = HighlightText_jg0812_0280caf592ac.create(attrs);\n                            component[___jg0402].nonRootCompNodes.push(el);\n                            return assertRenderResults_jg0402(el.__render());\n                          })()\n                        ),\n                        createElementWithoutAttrs_jg0402(\n                          \"li\",\n                          ...(() => {\n                            const attrs = attrs_jg0402({\n                              [___jg0402]: {\n                                debugName: \"attrs_of_<md-highlight>\",\n                                context: component[___jg0402].context,\n                              },\n                              searchMethod: `starts`,\n                              term: `pam`,\n                              text: `Ki Pam Beesly`\n                            });\n                            const el = HighlightText_jg0812_0280caf592ac.create(attrs);\n                            component[___jg0402].nonRootCompNodes.push(el);\n                            return assertRenderResults_jg0402(el.__render());\n                          })()\n                        )\n                      )\n                    )\n                  )\n                ),\n                ...(() => {\n                  const attrs = attrs_jg0402({\n                    [___jg0402]: {\n                      debugName: \"attrs_of_<CodeExample>\",\n                      context: component[___jg0402].context,\n                    },\n                    example: undefined,\n                    title: `Fuzzy or Normal`\n                  });\n                  const fn_0 = () => {\n                    attrs.example = vm_0._examples?.search;\n                  };\n                  fn_0();\n                  vm_0[$$_jg0402].__watch([\"_examples\",\"search\"], fn_0, component[$$_jg0402]);\n                  const el = CodeExample_jg0801.create(attrs);\n                  component[___jg0402].nonRootCompNodes.push(el);\n                  return assertRenderResults_jg0402(el.__render());\n                })()\n              );\n              component[___jg0402].rootNodes.push(el);\n              return el;\n            })()\n            ];\n          }\n        }\n      },\n      centered: true,\n      title: `自动补全`\n    });\n    const el = PageContainer_jg0801.create(attrs);\n    component[___jg0402].rootNodes.push(el);\n    return assertRenderResults_jg0402(el.__render());\n  })()\n  ];\n}","import { __ } from 'jinge'; import { BaseIcon, svgTagAttrs } from './_icon.js';\nimport {  createSVGElement as createSVGElement_jg0402, __ as ___jg0402 } from 'jinge';\nconst _svg = function(component) {\n  const vm_0 = component;\n  return [\n  (() => {\n    const el = createSVGElement_jg0402(\n      \"svg\", svgTagAttrs,\n      createSVGElement_jg0402(\n        \"path\",\n        {\n          d: `M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z`\n        },\n      )\n    );\n    component[___jg0402].rootNodes.push(el);\n    return el;\n  })()\n  ];\n}\nexport default class extends BaseIcon {\n  constructor(attrs) {\n    attrs[__].slots = { default: _svg };\n    super(attrs);\n  }\n}","import { __ } from 'jinge'; import { BaseIcon, svgTagAttrs } from './_icon.js';\nimport {  createSVGElement as createSVGElement_jg0402, __ as ___jg0402 } from 'jinge';\nconst _svg = function(component) {\n  const vm_0 = component;\n  return [\n  (() => {\n    const el = createSVGElement_jg0402(\n      \"svg\", svgTagAttrs,\n      createSVGElement_jg0402(\n        \"path\",\n        {\n          d: `M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z`\n        },\n      )\n    );\n    component[___jg0402].rootNodes.push(el);\n    return el;\n  })()\n  ];\n}\nexport default class extends BaseIcon {\n  constructor(attrs) {\n    attrs[__].slots = { default: _svg };\n    super(attrs);\n  }\n}","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1659344205802\n      var cssReload = require(\"../../../../jinge-material-site/node_modules/.pnpm/mini-css-extract-plugin@2.6.1_webpack@5.74.0/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1659344205513\n      var cssReload = require(\"../../../../jinge-material-site/node_modules/.pnpm/mini-css-extract-plugin@2.6.1_webpack@5.74.0/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1659344206260\n      var cssReload = require(\"../../../../jinge-material-site/node_modules/.pnpm/mini-css-extract-plugin@2.6.1_webpack@5.74.0/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","// extracted by mini-css-extract-plugin\nexport default {\"demo\":\"demo--kDnM6\"};\n    if(module.hot) {\n      // 1659344204995\n      var cssReload = require(\"../../../../../node_modules/.pnpm/mini-css-extract-plugin@2.6.1_webpack@5.74.0/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","// extracted by mini-css-extract-plugin\nexport default {\"searchAlgorithms\":\"search-algorithms--a1rxe\"};\n    if(module.hot) {\n      // 1659344204458\n      var cssReload = require(\"../../../../node_modules/.pnpm/mini-css-extract-plugin@2.6.1_webpack@5.74.0/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","export default {\"ts\":\"/* eslint-disable no-console */\\nimport { Attributes, Component, vm } from 'jinge';\\n\\nimport debounce from 'lodash-es/debounce';\\n\\nimport { fuzzyHighlight, fuzzySearch } from 'jinge-material/lib/_util/search';\\nimport _tpl from './async.html';\\n\\nconst MOCK_DATA_ALL_COUNTRIES = [\\n  {\\n    id: 1,\\n    name: 'Algeria',\\n  },\\n  {\\n    id: 2,\\n    name: 'Argentina',\\n  },\\n  {\\n    id: 3,\\n    name: 'Brazil',\\n  },\\n  {\\n    id: 4,\\n    name: 'Canada',\\n  },\\n  {\\n    id: 5,\\n    name: 'Italy',\\n  },\\n  {\\n    id: 6,\\n    name: 'Japan',\\n  },\\n  {\\n    id: 7,\\n    name: 'United Kingdom',\\n  },\\n  {\\n    id: 8,\\n    name: 'United States',\\n  },\\n];\\n\\nfunction mockFetchCountries(v: string) {\\n  return new Promise((resolve, reject) => {\\n    setTimeout(() => {\\n      if (Math.random() < 0.1) {\\n        return reject(new Error('server error.'));\\n      }\\n      if (!v) {\\n        resolve(MOCK_DATA_ALL_COUNTRIES.slice());\\n      } else {\\n        resolve(\\n          MOCK_DATA_ALL_COUNTRIES.filter((ci) => {\\n            return fuzzySearch(ci.name, v);\\n          }).map((ci) => {\\n            return {\\n              name: ci.name,\\n              html: fuzzyHighlight(ci.name, v),\\n            };\\n          }),\\n        );\\n      }\\n    }, 500);\\n  });\\n}\\n\\nexport default class ExampleACAsync extends Component {\\n  static template = _tpl;\\n\\n  value: string;\\n  getCountriesPromise: unknown;\\n  _delayGetCountries: unknown;\\n\\n  constructor(attrs: Attributes) {\\n    super(attrs);\\n    this.value = '';\\n    this.getCountriesPromise = null;\\n    this._delayGetCountries = debounce(this._getCountries.bind(this), 400);\\n  }\\n\\n  log(v: unknown) {\\n    console.log(v);\\n  }\\n\\n  _getCountries() {\\n    console.log('will get countries');\\n    this.getCountriesPromise = vm(\\n      mockFetchCountries(this.value).then(\\n        (result) => {\\n          console.log('got countries', result);\\n          return vm(result);\\n        },\\n        () => {\\n          console.error('failed to get countries due to network error');\\n        },\\n      ),\\n    );\\n  }\\n}\\n\",\"sass\":\"\",\"html\":\"<div>\\n  <md-autocomplete\\n    e:value=\\\"value\\\"\\n    e:options=\\\"getCountriesPromise\\\"\\n    on:change=\\\"value = $args[0]; log(value); _delayGetCountries()\\\"\\n    on:opened=\\\"_getCountries\\\"\\n  >\\n  <label slot-pass:default>Country</label>\\n  <span slot-pass:option vm:option >\\n    <bind-html e:content=\\\"option.html || option.name\\\"/>\\n  </span>\\n  </md-autocomplete>\\n</div>\\n\"}","export default {\"ts\":\"import { Attributes, Component, vm } from 'jinge';\\n\\nimport _tpl from './box.html';\\n\\nexport default class ExampleACBox extends Component {\\n  static template = _tpl;\\n\\n  selectedEmployee: unknown;\\n  selectedCountry: unknown;\\n  countries: string[];\\n  employees: string[];\\n\\n  constructor(attrs: Attributes) {\\n    super(attrs);\\n    this.selectedCountry = null;\\n    this.selectedEmployee = null;\\n    this.countries = vm([\\n      'Algeria',\\n      'Argentina',\\n      'Brazil',\\n      'Canada',\\n      'Italy',\\n      'Japan',\\n      'United Kingdom',\\n      'United States',\\n    ]);\\n    this.employees = vm([\\n      'Jim Halpert',\\n      'Dwight Schrute',\\n      'Michael Scott',\\n      'Pam Beesly',\\n      'Angela Martin',\\n      'Kelly Kapoor',\\n      'Ryan Howard',\\n      'Kevin Malone',\\n      'Creed Bratton',\\n      'Oscar Nunez',\\n      'Toby Flenderson',\\n      'Stanley Hudson',\\n      'Meredith Palmer',\\n      'Phyllis Lapin-Vance',\\n    ]);\\n  }\\n}\\n\",\"sass\":\"\",\"html\":\"<div>\\n  <md-autocomplete\\n    e:value=\\\"selectedEmployee\\\"\\n    on:change=\\\"selectedEmployee = $args[0]\\\"\\n    e:options=\\\"employees\\\"\\n    layout=\\\"box\\\"\\n    dense>\\n    <label>Employees</label>\\n  </md-autocomplete>\\n\\n  <md-toolbar class=\\\"md-primary\\\">\\n    <div class=\\\"md-toolbar-row\\\">\\n      <div class=\\\"md-toolbar-section-start\\\">\\n        <md-button class=\\\"md-icon-button md-on-primary\\\">\\n          <md-icon-menu/>\\n        </md-button>\\n      </div>\\n\\n      <md-autocomplete\\n        class=\\\"search\\\"\\n        e:value=\\\"selectedEmployee\\\"\\n        on:change=\\\"selectedEmployee = $args[0]\\\"\\n        e:options=\\\"employees\\\"\\n        layout=\\\"box\\\">\\n        <label>Search...</label>\\n      </md-autocomplete>\\n\\n      <div class=\\\"md-toolbar-section-end\\\">\\n        <md-button class=\\\"md-icon-button md-on-primary\\\">\\n          <md-icon-refresh/>\\n        </md-button>\\n\\n        <md-button class=\\\"md-icon-button md-on-primary\\\">\\n          <md-icon-more_vert/>\\n        </md-button>\\n      </div>\\n    </div>\\n  </md-toolbar>\\n</div>\"}","export default {\"ts\":\"import { Attributes, Component, vm } from 'jinge';\\n\\nimport _tpl from './search.html';\\n\\nexport default class ExampleACSearch extends Component {\\n  static template = _tpl;\\n\\n  selectedEmployee: unknown;\\n  selectedCountry: unknown;\\n  countries: string[];\\n  employees: string[];\\n\\n  constructor(attrs: Attributes) {\\n    super(attrs);\\n    this.selectedCountry = null;\\n    this.selectedEmployee = null;\\n    this.countries = vm([\\n      'Algeria',\\n      'Argentina',\\n      'Brazil',\\n      'Canada',\\n      'Italy',\\n      'Japan',\\n      'United Kingdom',\\n      'United States',\\n    ]);\\n    this.employees = vm([\\n      'Jim Halpert',\\n      'Dwight Schrute',\\n      'Michael Scott',\\n      'Pam Beesly',\\n      'Angela Martin',\\n      'Kelly Kapoor',\\n      'Ryan Howard',\\n      'Kevin Malone',\\n      'Creed Bratton',\\n      'Oscar Nunez',\\n      'Toby Flenderson',\\n      'Stanley Hudson',\\n      'Meredith Palmer',\\n      'Phyllis Lapin-Vance',\\n    ]);\\n  }\\n}\\n\",\"sass\":\"\",\"html\":\"<div>\\n  <strong>Fuzzy Search:</strong>\\n  <md-autocomplete\\n    e:value=\\\"selectedEmployee\\\" \\n    e:options=\\\"employees\\\"\\n  >\\n    <label slot-pass:default>Manager</label>\\n    <md-highlight\\n      slot-pass:option\\n      vm:option\\n      vm:term\\n      e:term=\\\"term\\\"\\n      e:text=\\\"option\\\"\\n    />\\n  </md-autocomplete>\\n\\n  <strong>Includes Search:</strong>\\n  <md-autocomplete\\n    e:value=\\\"selectedCountry\\\"\\n    e:options=\\\"countries\\\"\\n    searchMethod=\\\"includes\\\"\\n  >\\n    <label slot-pass:default>Country</label>\\n    <md-highlight\\n      slot-pass:option\\n      vm:option\\n      vm:term\\n      searchMethod=\\\"includes\\\"\\n      e:term=\\\"term\\\"\\n      e:text=\\\"option\\\"\\n    />\\n  </md-autocomplete>\\n  <strong>StartsWith Search:</strong>\\n  <md-autocomplete\\n    e:value=\\\"selectedCountry\\\"\\n    e:options=\\\"countries\\\"\\n    searchMethod=\\\"starts\\\"\\n  >\\n    <label slot-pass:default>Country</label>\\n    <md-highlight\\n      slot-pass:option\\n      vm:option\\n      vm:term\\n      searchMethod=\\\"starts\\\"\\n      e:term=\\\"term\\\"\\n      e:text=\\\"option\\\"\\n    />\\n  </md-autocomplete>\\n</div>\"}","export default {\"ts\":\"import { Attributes, Component, vm } from 'jinge';\\n\\nimport _tpl from './static.html';\\n\\nexport default class ExampleACStatic extends Component {\\n  static template = _tpl;\\n\\n  selectedEmployee: unknown;\\n  selectedCountry: unknown;\\n  countries: string[];\\n  employees: string[];\\n\\n  constructor(attrs: Attributes) {\\n    super(attrs);\\n    this.selectedCountry = undefined;\\n    this.selectedEmployee = undefined;\\n    this.countries = vm([\\n      'Algeria',\\n      'Argentina',\\n      'Brazil',\\n      'Canada',\\n      'Italy',\\n      'Japan',\\n      'United Kingdom',\\n      'United States',\\n    ]);\\n    this.employees = vm([\\n      'Jim Halpert',\\n      'Dwight Schrute',\\n      'Michael Scott',\\n      'Pam Beesly',\\n      'Angela Martin',\\n      'Kelly Kapoor',\\n      'Ryan Howard',\\n      'Kevin Malone',\\n      'Creed Bratton',\\n      'Oscar Nunez',\\n      'Toby Flenderson',\\n      'Stanley Hudson',\\n      'Meredith Palmer',\\n      'Phyllis Lapin-Vance',\\n    ]);\\n  }\\n\\n  log(msg: unknown) {\\n    // eslint-disable-next-line no-console\\n    console.log(msg);\\n  }\\n}\\n\",\"sass\":\"\",\"html\":\"<div>\\n  <md-autocomplete e:value=\\\"selectedCountry\\\" on:change=\\\"selectedCountry = $args[0]; log(selectedCountry)\\\" e:options=\\\"countries\\\">\\n    <label>Country</label>\\n  </md-autocomplete>\\n\\n  <md-autocomplete e:value=\\\"selectedEmployee\\\" on:change=\\\"selectedEmployee = $args[0]; log(selectedEmployee)\\\" e:options=\\\"employees\\\" dense>\\n    <label>Employees</label>\\n  </md-autocomplete>\\n</div>\"}","export default {\"ts\":\"import { Attributes, Component, vm } from 'jinge';\\n\\nimport _tpl from './template.html';\\n\\ninterface Color {\\n  name: string;\\n  color: string;\\n}\\nexport default class ExampleACTemplate extends Component {\\n  static template = _tpl;\\n\\n  value: string;\\n  selected: Color;\\n  colors: Color[];\\n\\n  constructor(attrs: Attributes) {\\n    super(attrs);\\n    this.value = null;\\n    this.selected = null;\\n    this.colors = vm([\\n      {\\n        name: 'Aqua',\\n        color: '#00ffff',\\n      },\\n      {\\n        name: 'Aquamarine',\\n        color: '#7fffd4',\\n      },\\n      {\\n        name: 'Azure',\\n        color: '#f0ffff',\\n      },\\n      {\\n        name: 'Beige',\\n        color: '#f5f5dc',\\n      },\\n      {\\n        name: 'Black',\\n        color: '#000000',\\n      },\\n      {\\n        name: 'Blue',\\n        color: '#0000ff',\\n      },\\n      {\\n        name: 'Brown',\\n        color: '#a52a2a',\\n      },\\n      {\\n        name: 'Crimson',\\n        color: '#dc143c',\\n      },\\n      {\\n        name: 'Cyan',\\n        color: '#00ffff',\\n      },\\n      {\\n        name: 'Deep Pink',\\n        color: '#ff1493',\\n      },\\n      {\\n        name: 'Dim Gray',\\n        color: '#696969',\\n      },\\n      {\\n        name: 'Fuchsia',\\n        color: '#ff00ff',\\n      },\\n      {\\n        name: 'Gold',\\n        color: '#ffd700',\\n      },\\n      {\\n        name: 'Gray',\\n        color: '#808080',\\n      },\\n      {\\n        name: 'Green',\\n        color: '#008000',\\n      },\\n      {\\n        name: 'Green Yellow',\\n        color: '#adff2f',\\n      },\\n      {\\n        name: 'Grey',\\n        color: '#808080',\\n      },\\n      {\\n        name: 'Hotpink',\\n        color: '#ff69b4',\\n      },\\n      {\\n        name: 'Indigo',\\n        color: '#4b0082',\\n      },\\n      {\\n        name: 'Ivory',\\n        color: '#fffff0',\\n      },\\n      {\\n        name: 'Khaki',\\n        color: '#f0e68c',\\n      },\\n      {\\n        name: 'Lavender',\\n        color: '#e6e6fa',\\n      },\\n      {\\n        name: 'Lime',\\n        color: '#00ff00',\\n      },\\n      {\\n        name: 'Magenta',\\n        color: '#ff00ff',\\n      },\\n      {\\n        name: 'Maroon',\\n        color: '#800000',\\n      },\\n      {\\n        name: 'Navy',\\n        color: '#000080',\\n      },\\n      {\\n        name: 'Olive',\\n        color: '#808000',\\n      },\\n      {\\n        name: 'Orange',\\n        color: '#ffa500',\\n      },\\n      {\\n        name: 'Orange Red',\\n        color: '#ff4500',\\n      },\\n      {\\n        name: 'Pale Golden Rod',\\n        color: '#eee8aa',\\n      },\\n      {\\n        name: 'Pale Green',\\n        color: '#98fb98',\\n      },\\n      {\\n        name: 'Pink',\\n        color: '#ffc0cb',\\n      },\\n      {\\n        name: 'Purple',\\n        color: '#800080',\\n      },\\n      {\\n        name: 'Red',\\n        color: '#ff0000',\\n      },\\n      {\\n        name: 'Royal Blue',\\n        color: '#4169e1',\\n      },\\n      {\\n        name: 'Sea Green',\\n        color: '#2e8b57',\\n      },\\n      {\\n        name: 'Silver',\\n        color: '#c0c0c0',\\n      },\\n      {\\n        name: 'Sky Blue',\\n        color: '#87ceeb',\\n      },\\n      {\\n        name: 'Slate Blue',\\n        color: '#6a5acd',\\n      },\\n      {\\n        name: 'Slate Grey',\\n        color: '#708090',\\n      },\\n      {\\n        name: 'Teal',\\n        color: '#008080',\\n      },\\n      {\\n        name: 'Turquoise',\\n        color: '#40e0d0',\\n      },\\n      {\\n        name: 'Violet',\\n        color: '#ee82ee',\\n      },\\n      {\\n        name: 'White',\\n        color: '#ffffff',\\n      },\\n      {\\n        name: 'Yellow',\\n        color: '#ffff00',\\n      },\\n    ]);\\n  }\\n\\n  onSelected(item: Color) {\\n    this.selected = item;\\n  }\\n\\n  noop() {\\n    alert('noop');\\n  }\\n}\\n\",\"sass\":\".demo {\\n  :global {\\n    .color {\\n      width: 16px;\\n      height: 16px;\\n      display: inline-block;\\n      margin-right: 16px;\\n      border: 1px solid rgb(0 0 0 / 12%);\\n    }\\n\\n    .md-helper-text {\\n      display: flex;\\n      align-items: center;\\n\\n      .color {\\n        width: 12px;\\n        height: 12px;\\n        margin-left: 4px;\\n      }\\n    }\\n  }\\n}\\n\",\"html\":\"<!-- import style from './template.scss' -->\\n<div :class=\\\"style.demo\\\">\\n  <md-autocomplete\\n    e:value=\\\"value\\\"\\n    on:change=\\\"value = $args[0]\\\"\\n    on:selected=\\\"onSelected\\\"\\n    e:options=\\\"colors\\\"\\n    searchProp=\\\"name\\\"\\n  >\\n    <_slot slot-pass:option vm:option vm:term>\\n      <span class=\\\"color\\\" style=\\\"background-color: ${ option.color };\\\"></span>\\n      <md-highlight e:term=\\\"term\\\" e:text=\\\"option.name\\\"/>\\n    </_slot>\\n\\n    <_slot slot-pass:empty vm-use:term>\\n      No colors matching \\\"${ term }\\\" were found. <a on:click=\\\"noop()\\\">Create a new</a> one!\\n    </_slot>\\n\\n    <_slot slot-pass:default>\\n    <label>Color</label>\\n    <if e:expect=\\\"selected\\\">\\n      <div class=\\\"md-helper-text\\\">\\n        <strong>Selected Color:</strong>\\n        <span class=\\\"color\\\" style=\\\"background-color: ${selected.color};\\\"></span>\\n      </div>\\n    </if>\\n    </_slot>\\n  </md-autocomplete>\\n</div>\"}","export default {\"ts\":\"import { Attributes, Component, vm } from 'jinge';\\n\\nimport _tpl from './trigger.html';\\n\\nexport default class ExampleACTrigger extends Component {\\n  static template = _tpl;\\n\\n  selectedEmployee: unknown;\\n  selectedCountry: unknown;\\n  countries: string[];\\n  employees: string[];\\n\\n  constructor(attrs: Attributes) {\\n    super(attrs);\\n    this.selectedCountry = null;\\n    this.selectedEmployee = null;\\n    this.countries = vm([\\n      'Algeria',\\n      'Argentina',\\n      'Brazil',\\n      'Canada',\\n      'Italy',\\n      'Japan',\\n      'United Kingdom',\\n      'United States',\\n    ]);\\n    this.employees = vm([\\n      'Jim Halpert',\\n      'Dwight Schrute',\\n      'Michael Scott',\\n      'Pam Beesly',\\n      'Angela Martin',\\n      'Kelly Kapoor',\\n      'Ryan Howard',\\n      'Kevin Malone',\\n      'Creed Bratton',\\n      'Oscar Nunez',\\n      'Toby Flenderson',\\n      'Stanley Hudson',\\n      'Meredith Palmer',\\n      'Phyllis Lapin-Vance',\\n    ]);\\n  }\\n}\\n\",\"sass\":\"\",\"html\":\"<div>\\n  <md-autocomplete e:value=\\\"selectedCountry\\\" on:change=\\\"selectedCountry = $args[0];\\\" e:options=\\\"countries\\\">\\n    <label>Country</label>\\n  </md-autocomplete>\\n\\n  <md-autocomplete e:value=\\\"selectedEmployee\\\" on:change=\\\"selectedEmployee = $args[0];\\\" e:options=\\\"employees\\\" e:openOnFocus=\\\"false\\\">\\n    <label>Employees</label>\\n  </md-autocomplete>\\n</div>\"}","import './style/index.js';import { $$ as $$_jg0402 } from 'jinge';import { Component, __, isPromise, uid } from \"jinge\";\nimport { fuzzySearch, startsSearch, includesSearch, EnumAttrValidator } from \"../_util\";\nimport _tpl from \"./index.tpl.js\";\nconst SearchMethodValidator = new EnumAttrValidator(\"md-autocomplete\", \"searchMethod\", [\"fuzzy\", \"starts\", \"includes\"]);\nconst LayoutValidator = new EnumAttrValidator(\"md-autocomplete\", \"layout\", [\"floating\", \"box\"]);\nclass Autocomplete extends Component {\n  constructor(attrs) {\n    SearchMethodValidator.assert(attrs);\n    LayoutValidator.assert(attrs);\n    super(attrs);const _jg0 = this[$$_jg0402].proxy;\n    _jg0._hasScopedEmptySlot = !!attrs[__].slots.empty;\n    _jg0.isOptionsPromise = false;\n    _jg0.hasFilteredItems = false;\n    _jg0.promisePendingKey = null;\n    _jg0.filteredOptions = null;const f8_jg0402 = () => {\n    _jg0.value = attrs.value; }; f8_jg0402(); attrs[$$_jg0402].__watch(\"value\", f8_jg0402);const f9_jg0402 = () => {\n    _jg0.dense = attrs.dense; }; f9_jg0402(); attrs[$$_jg0402].__watch(\"dense\", f9_jg0402);const f10_jg0402 = () => {\n    _jg0.layout = attrs.layout || \"floating\"; }; f10_jg0402(); attrs[$$_jg0402].__watch(\"layout\", f10_jg0402);const f11_jg0402 = () => {\n    _jg0.openOnFocus = attrs.openOnFocus !== false; }; f11_jg0402(); attrs[$$_jg0402].__watch(\"openOnFocus\", f11_jg0402);const f12_jg0402 = () => {\n    _jg0.searchMethod = attrs.searchMethod || \"fuzzy\"; }; f12_jg0402(); attrs[$$_jg0402].__watch(\"searchMethod\", f12_jg0402);const f13_jg0402 = () => {\n    _jg0.searchProp = attrs.searchProp; }; f13_jg0402(); attrs[$$_jg0402].__watch(\"searchProp\", f13_jg0402);const f14_jg0402 = () => {\n    _jg0.ignoreCase = attrs.ignoreCase !== false; }; f14_jg0402(); attrs[$$_jg0402].__watch(\"ignoreCase\", f14_jg0402);const f15_jg0402 = () => {\n    _jg0.name = attrs.name; }; f15_jg0402(); attrs[$$_jg0402].__watch(\"name\", f15_jg0402);const f16_jg0402 = () => {\n    _jg0.id = attrs.id; }; f16_jg0402(); attrs[$$_jg0402].__watch(\"id\", f16_jg0402);const f17_jg0402 = () => {\n    _jg0.maxlength = attrs.maxlength; }; f17_jg0402(); attrs[$$_jg0402].__watch(\"maxlength\", f17_jg0402);const f18_jg0402 = () => {\n    _jg0.placeholder = attrs.placeholder; }; f18_jg0402(); attrs[$$_jg0402].__watch(\"placeholder\", f18_jg0402);const f19_jg0402 = () => {\n    _jg0.options = attrs.options; }; f19_jg0402(); attrs[$$_jg0402].__watch(\"options\", f19_jg0402);\n    _jg0.showMenu = false;\n  }\n  get value() {\n    return this._value;\n  }\n  set value(v) {\n    if (this._value === v)\n      return;\n    this._value = v;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(v) {\n    if (this._options === v)\n      return;\n    this._options = v;\n    this.isOptionsPromise = isPromise(v);\n    if (this.isOptionsPromise) {\n      const pendingKey = uid();\n      this.promisePendingKey = pendingKey;\n      v.then((resultOptions) => {\n        if (this.promisePendingKey !== pendingKey) {\n          return;\n        }\n        this.promisePendingKey = null;\n        if (resultOptions) {\n          this.filteredOptions = resultOptions;\n          this._updateHasItems();\n        }\n      }, () => {\n        if (this.promisePendingKey !== pendingKey) {\n          return;\n        }\n        this.promisePendingKey = null;\n      });\n    } else {\n      this.promisePendingKey = null;\n      this._updateFiltered();\n    }\n  }\n  _updateHasItems() {\n    this.hasFilteredItems = this.filteredOptions && this.filteredOptions.length > 0;\n  }\n  matchText(item) {\n    const term = this._value;\n    if (!term) {\n      return true;\n    }\n    switch (this.searchMethod) {\n      case \"fuzzy\":\n        return fuzzySearch(item, term, this.ignoreCase);\n      case \"starts\":\n        return startsSearch(item, term, this.ignoreCase);\n      case \"includes\":\n        return includesSearch(item, term, this.ignoreCase);\n    }\n    return false;\n  }\n  _updateFiltered() {\n    if (this.isOptionsPromise)\n      return;\n    this.filteredOptions = this._options ? this._options.filter((item) => {\n      if (this.searchProp) {\n        return this.matchText(item[this.searchProp]);\n      } else {\n        return this.matchText(item);\n      }\n    }) : null;\n    this._updateHasItems();\n  }\n  onInput(value) {\n    if (this.value === value) {\n      return;\n    }\n    this.value = value;\n    this.__notify(\"change\", value);\n    this.__updateIfNeed(this._updateFiltered);\n    if (!this.openOnFocus) {\n      this.showOptions();\n    }\n  }\n  _openOnFocus() {\n    if (!this.openOnFocus) {\n      return;\n    }\n    this.showOptions();\n  }\n  showOptions() {\n    if (this.showMenu) {\n      return false;\n    }\n    this.showMenu = true;\n    this.__notify(\"opened\");\n    return true;\n  }\n  hideOptions() {\n    this.showMenu = false;\n    this.__notify(\"closed\");\n  }\n  selectItem(item, $event) {\n    const content = $event.target.textContent.trim();\n    if (this.value !== content) {\n      this.value = content;\n      this.__notify(\"change\", content);\n    }\n    this.__notify(\"selected\", item);\n    this.hideOptions();\n  }\n}\nAutocomplete.template = _tpl;\nexport {\n  Autocomplete\n};\n\n//# sourceMappingURL=index.js.map","import {  attrs as attrs_jg0402, __ as ___jg0402, $$ as $$_jg0402, assertRenderResults as assertRenderResults_jg0402, createElement as createElement_jg0402, createTextNode as createTextNode_jg0402, setText as setText_jg0402, arrayEqual as arrayEqual_jg0402, emptyRenderFn as emptyRenderFn_jg0402, ParameterComponent as ParameterComponent_jg0402, class2str as class2str_jg0402, vm as vm_jg0402 } from 'jinge';\nimport { IfComponent as IfComponent_jg0812_19c1b8dc4402, ForComponent as ForComponent_jg0812_19c1b8dc4402 } from 'jinge';\nimport { Field as Field_jg0801 } from '../field';\nimport { Menu as Menu_jg0801, MenuItem as MenuItem_jg0801 } from '../menu';\nimport { Input as Input_jg0801 } from '../input';\nimport { Spinner as Spinner_jg0801 } from '../spinner';\nexport default function(component) {\n  const vm_0 = component;\n  return [\n  ...(() => {\n    const attrs = attrs_jg0402({\n      [___jg0402]: {\n        context: component[___jg0402].context,\n        slots: {\n          'default': function(component) {\n            return [\n            ...(() => {\n              const attrs = attrs_jg0402({\n                [___jg0402]: {\n                  context: component[___jg0402].context,\n                  listeners: {\n                    \"update.active\": {\n                      fn: function(...args) {\n                        vm_0.showMenu = args[0]\n                      },\n                      opts: null\n                    }\n                  },\n                  slots: {\n                    'default': function(component) {\n                      return [\n                      ...(() => {\n                        const attrs = attrs_jg0402({\n                          [___jg0402]: {\n                            context: component[___jg0402].context,\n                            listeners: {\n                              focus: {\n                                fn: function(...args) {\n                                  vm_0._openOnFocus(...args);\n                                },\n                                opts: {\"stop\":true}\n                              },  click: {\n                                fn: function(...args) {\n                                  vm_0._openOnFocus(...args);\n                                },\n                                opts: {\"stop\":true,\"prevent\":true}\n                              },  blur: {\n                                fn: function(...args) {\n                                  vm_0.hideOptions(...args);\n                                },\n                                opts: null\n                              },  change: {\n                                fn: function(...args) {\n                                  vm_0.onInput(...args);\n                                },\n                                opts: null\n                              }\n                            },\n                          },\n                          value: undefined,\n                          id: undefined,\n                          name: undefined,\n                          maxlength: undefined,\n                          placeholder: undefined\n                        });\n                        const fn_0 = () => {\n                          attrs.value = vm_0.value;\n                        };\n                        fn_0();\n                        vm_0[$$_jg0402].__watch([\"value\"], fn_0, component[$$_jg0402]);\n                        const fn_1 = () => {\n                          attrs.id = vm_0.id;\n                        };\n                        fn_1();\n                        vm_0[$$_jg0402].__watch([\"id\"], fn_1, component[$$_jg0402]);\n                        const fn_2 = () => {\n                          attrs.name = vm_0.name;\n                        };\n                        fn_2();\n                        vm_0[$$_jg0402].__watch([\"name\"], fn_2, component[$$_jg0402]);\n                        const fn_3 = () => {\n                          attrs.maxlength = vm_0.maxlength;\n                        };\n                        fn_3();\n                        vm_0[$$_jg0402].__watch([\"maxlength\"], fn_3, component[$$_jg0402]);\n                        const fn_4 = () => {\n                          attrs.placeholder = vm_0.placeholder;\n                        };\n                        fn_4();\n                        vm_0[$$_jg0402].__watch([\"placeholder\"], fn_4, component[$$_jg0402]);\n                        const el = Input_jg0801.create(attrs);\n                        component[___jg0402].rootNodes.push(el);\n                        return assertRenderResults_jg0402(el.__render());\n                      })()\n                      ];\n                    },\n                    'content': function(component) {\n                      return [\n                      ...(() => {\n                        const attrs = attrs_jg0402({\n                          [___jg0402]: {\n                            context: component[___jg0402].context,\n                            slots: {\n                              'default': function(component) {\n                                return [\n                                (() => {\n                                  const el = createElement_jg0402(\n                                    \"div\",\n                                    {\n                                      class: `md-autocomplete-loading`\n                                    },\n                                    ...(() => {\n                                      const attrs = attrs_jg0402({\n                                        [___jg0402]: {\n                                          context: component[___jg0402].context,\n                                        },\n                                        diameter: `40`,\n                                        stroke: `4`,\n                                        mode: `indeterminate`\n                                      });\n                                      const el = Spinner_jg0801.create(attrs);\n                                      component[___jg0402].nonRootCompNodes.push(el);\n                                      return assertRenderResults_jg0402(el.__render());\n                                    })()\n                                  );\n                                  component[___jg0402].rootNodes.push(el);\n                                  return el;\n                                })()\n                                ];\n                              }\n                            }\n                          },\n                          expect: undefined\n                        });\n                        const fn_0 = () => {\n                          attrs.expect = vm_0.promisePendingKey !== null;\n                        };\n                        fn_0();\n                        vm_0[$$_jg0402].__watch([\"promisePendingKey\"], fn_0, component[$$_jg0402]);\n                        const el = IfComponent_jg0812_19c1b8dc4402.create(attrs);\n                        component[___jg0402].rootNodes.push(el);\n                        return assertRenderResults_jg0402(el.__render());\n                      })(),\n                      ...(() => {\n                        const attrs = attrs_jg0402({\n                          [___jg0402]: {\n                            context: component[___jg0402].context,\n                            slots: {\n                              'default': function(component) {\n                                return [\n                                (() => {\n                                  const el = createElement_jg0402(\n                                    \"div\",\n                                    {\n                                      class: `md-autocomplete-items`\n                                    },\n                                    ...(() => {\n                                      const attrs = attrs_jg0402({\n                                        [___jg0402]: {\n                                          context: component[___jg0402].context,\n                                          slots: {\n                                            'default': function(component) {\n                                              const vm_1 = component;\n                                              return [\n                                              ...(() => {\n                                                const attrs = attrs_jg0402({\n                                                  [___jg0402]: {\n                                                    context: component[___jg0402].context,\n                                                    listeners: {\n                                                      click: {\n                                                        fn: function(...args) {\n                                                          vm_0.selectItem(vm_1.each, args[0])\n                                                        },\n                                                        opts: null\n                                                      }\n                                                    },\n                                                    slots: {\n                                                      'default': function(component) {\n                                                        return [\n                                                        ...(() => {\n                                                          const __ac = vm_0[___jg0402].slots;\n                                                          const renderFn = __ac && __ac['option'] ? __ac['option'] :   function(component) {\n                                                            return [\n                                                            (() => {\n                                                              const el = createTextNode_jg0402();\n                                                              let _0_0;\n                                                              let _0_0_p;\n                                                              let _0_0_0;\n                                                              function _calc_0_0_0() {\n                                                                _0_0_0 = vm_0.searchProp;\n                                                              }\n                                                              function _calc_0_0() {\n                                                                _0_0 = vm_1.each?.[_0_0_0];\n                                                              }\n                                                              function _calc_0() {\n                                                                setText_jg0402(el, `${vm_0.searchProp ? _0_0 : vm_1.each}`);\n                                                              }\n                                                              _calc_0_0_0();\n                                                              _calc_0_0();\n                                                              _calc_0();\n                                                              function _update_0() {\n                                                                _calc_0();\n                                                              }\n                                                              function _update_0_0() {\n                                                                _calc_0_0();\n                                                                _update_0();\n                                                              }\n                                                              function _notify_0_0() {\n                                                                const _np = ['each', _0_0_0];\n                                                                const _eq = _0_0_p && arrayEqual_jg0402(_0_0_p, _np);\n                                                                if (_0_0_p && !_eq) {\n                                                                  vm_1[$$_jg0402].__unwatch(_0_0_p, _update_0_0, component[$$_jg0402]);\n                                                                }\n                                                                if (!_0_0_p || !_eq) {\n                                                                  _0_0_p = _np;\n                                                                  vm_1[$$_jg0402].__watch(_0_0_p, _update_0_0, component[$$_jg0402]);\n                                                                }\n                                                              }\n                                                              function _update_0_0_0() {\n                                                                _calc_0_0_0();\n                                                                _notify_0_0();\n                                                                _update_0_0();\n                                                              }\n                                                              vm_0[$$_jg0402].__watch([\"searchProp\"], _update_0_0_0, component[$$_jg0402]);\n                                                              _notify_0_0();\n                                                              vm_0[$$_jg0402].__watch([\"searchProp\"], _calc_0, component[$$_jg0402]);\n                                                              vm_1[$$_jg0402].__watch([\"each\"], _calc_0, component[$$_jg0402]);\n                                                              component[___jg0402].rootNodes.push(el);\n                                                              return el;\n                                                            })()\n                                                            ];\n                                                          };\n                                                          const attrs = attrs_jg0402({\n                                                            option: null, term: null, \n                                                            [___jg0402]: {\n                                                              context: component[___jg0402].context,\n                                                              slots: {\n                                                                default: renderFn || emptyRenderFn_jg0402\n                                                              }\n                                                            }\n                                                          });\n                                                          const fn_0 = () => {\n                                                            attrs.option = vm_1.each;\n                                                          };\n                                                          fn_0();\n                                                          const fn_1 = () => {\n                                                            attrs.term = vm_0.value;\n                                                          };\n                                                          fn_1();\n                                                          const el = (new ParameterComponent_jg0402(attrs, [\"option\",\"term\"]))[$$_jg0402].proxy;\n                                                          vm_1[$$_jg0402].__watch([\"each\"], fn_0, el[$$_jg0402]);\n                                                          vm_0[$$_jg0402].__watch([\"value\"], fn_1, el[$$_jg0402]);\n                                                          component[___jg0402].rootNodes.push(el);\n                                                          debugger\n                                                          const xx = el.__render();\n                                                          return assertRenderResults_jg0402(xx);\n                                                        })()\n                                                        ];\n                                                      }\n                                                    }\n                                                  },\n                                                });\n                                                const el = MenuItem_jg0801.create(attrs);\n                                                component[___jg0402].rootNodes.push(el);\n                                                return assertRenderResults_jg0402(el.__render());\n                                              })()\n                                              ];\n                                            }\n                                          }\n                                        },\n                                        loop: undefined\n                                      });\n                                      const fn_0 = () => {\n                                        attrs.loop = vm_0.filteredOptions;\n                                      };\n                                      fn_0();\n                                      vm_0[$$_jg0402].__watch([\"filteredOptions\"], fn_0, component[$$_jg0402]);\n                                      const el = ForComponent_jg0812_19c1b8dc4402.create(attrs);\n                                      component[___jg0402].nonRootCompNodes.push(el);\n                                      return assertRenderResults_jg0402(el.__render());\n                                    })()\n                                  );\n                                  component[___jg0402].rootNodes.push(el);\n                                  return el;\n                                })()\n                                ];\n                              }\n                            }\n                          },\n                          expect: undefined\n                        });\n                        const fn_0 = () => {\n                          attrs.expect = vm_0.hasFilteredItems;\n                        };\n                        fn_0();\n                        vm_0[$$_jg0402].__watch([\"hasFilteredItems\"], fn_0, component[$$_jg0402]);\n                        const el = IfComponent_jg0812_19c1b8dc4402.create(attrs);\n                        component[___jg0402].rootNodes.push(el);\n                        return assertRenderResults_jg0402(el.__render());\n                      })(),\n                      ...(() => {\n                        const attrs = attrs_jg0402({\n                          [___jg0402]: {\n                            context: component[___jg0402].context,\n                            slots: {\n                              'default': function(component) {\n                                return [\n                                ...(() => {\n                                  const attrs = attrs_jg0402({\n                                    [___jg0402]: {\n                                      context: component[___jg0402].context,\n                                      slots: {\n                                        'default': function(component) {\n                                          return [\n                                          (() => {\n                                            const el = createElement_jg0402(\n                                              \"div\",\n                                              {\n                                                class: `md-autocomplete-empty`\n                                              },\n                                              ...(() => {\n                                                const __ac = vm_0[___jg0402].slots;\n                                                const renderFn = __ac && __ac['empty'] ? __ac['empty'] : null;\n                                                const attrs = attrs_jg0402({\n                                                  term: null, \n                                                  [___jg0402]: {\n                                                    context: component[___jg0402].context,\n                                                    slots: {\n                                                      default: renderFn || emptyRenderFn_jg0402\n                                                    }\n                                                  }\n                                                });\n                                                const fn_0 = () => {\n                                                  attrs.term = vm_0.value;\n                                                };\n                                                fn_0();\n                                                const el = (new ParameterComponent_jg0402(attrs, [\"term\"]))[$$_jg0402].proxy;\n                                                vm_0[$$_jg0402].__watch([\"value\"], fn_0, el[$$_jg0402]);\n                                                component[___jg0402].nonRootCompNodes.push(el);\n                                                return assertRenderResults_jg0402(el.__render());\n                                              })()\n                                            );\n                                            component[___jg0402].rootNodes.push(el);\n                                            return el;\n                                          })()\n                                          ];\n                                        }\n                                      }\n                                    },\n                                  });\n                                  const el = MenuItem_jg0801.create(attrs);\n                                  component[___jg0402].rootNodes.push(el);\n                                  return assertRenderResults_jg0402(el.__render());\n                                })()\n                                ];\n                              }\n                            }\n                          },\n                          expect: undefined\n                        });\n                        const fn_0 = () => {\n                          attrs.expect = !vm_0.hasFilteredItems && vm_0._hasScopedEmptySlot;\n                        };\n                        fn_0();\n                        vm_0[$$_jg0402].__watch([\"hasFilteredItems\"], fn_0, component[$$_jg0402]);\n                        vm_0[$$_jg0402].__watch([\"_hasScopedEmptySlot\"], fn_0, component[$$_jg0402]);\n                        const el = IfComponent_jg0812_19c1b8dc4402.create(attrs);\n                        component[___jg0402].rootNodes.push(el);\n                        return assertRenderResults_jg0402(el.__render());\n                      })()\n                      ];\n                    }\n                  }\n                },\n                dense: undefined,\n                alignTrigger: undefined,\n                active: undefined,\n                placement: `bottom`,\n                trigger: `none`,\n                fullWidth: true\n              });\n              const fn_0 = () => {\n                attrs.dense = vm_0.dense;\n              };\n              fn_0();\n              vm_0[$$_jg0402].__watch([\"dense\"], fn_0, component[$$_jg0402]);\n              const fn_1 = () => {\n                attrs.alignTrigger = vm_0.layout === 'box' ? '0,8' : true;\n              };\n              fn_1();\n              vm_0[$$_jg0402].__watch([\"layout\"], fn_1, component[$$_jg0402]);\n              const fn_2 = () => {\n                attrs.active = vm_0.showMenu && (vm_0.hasFilteredItems || vm_0._hasScopedEmptySlot);\n              };\n              fn_2();\n              vm_0[$$_jg0402].__watch([\"showMenu\"], fn_2, component[$$_jg0402]);\n              vm_0[$$_jg0402].__watch([\"hasFilteredItems\"], fn_2, component[$$_jg0402]);\n              vm_0[$$_jg0402].__watch([\"_hasScopedEmptySlot\"], fn_2, component[$$_jg0402]);\n              const el = Menu_jg0801.create(attrs);\n              component[___jg0402].rootNodes.push(el);\n              return assertRenderResults_jg0402(el.__render());\n            })(),\n            ...(() => {\n              const __ac = vm_0[___jg0402].slots;\n              const renderFn = __ac && __ac['default'] ? __ac['default'] : null;\n              const attrs = attrs_jg0402({\n                [___jg0402]: {\n                  context: component[___jg0402].context,\n                  slots: {\n                    default: renderFn || emptyRenderFn_jg0402\n                  }\n                }\n              });\n              const el = (new ParameterComponent_jg0402(attrs, []))[$$_jg0402].proxy;\n              component[___jg0402].rootNodes.push(el);\n              return assertRenderResults_jg0402(el.__render());\n            })()\n            ];\n          }\n        }\n      },\n      class: undefined,\n      inline: undefined,\n      clearable: true\n    });\n    const fn_0 = () => {\n      attrs.class = class2str_jg0402(vm_jg0402(['md-autocomplete', vm_0.layout === 'box' ? ' md-autocomplete-box' : '']));\n    };\n    fn_0();\n    vm_0[$$_jg0402].__watch([\"layout\"], fn_0, component[$$_jg0402]);\n    const fn_1 = () => {\n      attrs.inline = vm_0.layout === 'box';\n    };\n    fn_1();\n    vm_0[$$_jg0402].__watch([\"layout\"], fn_1, component[$$_jg0402]);\n    const el = Field_jg0801.create(attrs);\n    component[___jg0402].rootNodes.push(el);\n    return assertRenderResults_jg0402(el.__render());\n  })()\n  ];\n}","import '../../../style/index.css';\nimport './index.css';\n","import './style/index.js';import { $$ as $$_jg0402 } from 'jinge';import { Component } from \"jinge\";\nimport { fuzzyHighlight, includesHighlight, startsHighlight, EnumAttrValidator } from \"../_util\";\nimport _tpl from \"./index.tpl.js\";\nfunction generateHighlight(text, term, searchMethod, ignoreCase) {\n  switch (searchMethod) {\n    case \"fuzzy\":\n      return fuzzyHighlight(text, term, ignoreCase);\n    case \"includes\":\n      return includesHighlight(text, term, ignoreCase);\n    case \"starts\":\n      return startsHighlight(text, term, ignoreCase);\n    default:\n      return text;\n  }\n}\nconst SearchMethodValidator = new EnumAttrValidator(\"<md-highlight>\", \"searchMethod\", [\"fuzzy\", \"starts\", \"includes\"]);\nclass HighlightText extends Component {\n  constructor(attrs) {\n    SearchMethodValidator.assert(attrs);\n    super(attrs);const _jg0 = this[$$_jg0402].proxy;const f2_jg0402 = () => {\n    _jg0.term = attrs.term; }; f2_jg0402(); attrs[$$_jg0402].__watch(\"term\", f2_jg0402);const f3_jg0402 = () => {\n    _jg0.searchMethod = attrs.searchMethod || \"fuzzy\"; }; f3_jg0402(); attrs[$$_jg0402].__watch(\"searchMethod\", f3_jg0402);const f4_jg0402 = () => {\n    _jg0.ignoreCase = attrs.ignoreCase !== false; }; f4_jg0402(); attrs[$$_jg0402].__watch(\"ignoreCase\", f4_jg0402);const f5_jg0402 = () => {\n    _jg0.text = attrs.text; }; f5_jg0402(); attrs[$$_jg0402].__watch(\"text\", f5_jg0402);\n  }\n  get term() {\n    return this._term;\n  }\n  set term(v) {\n    if (this._term === v)\n      return;\n    this._term = v;\n    this.__updateIfNeed();\n  }\n  get text() {\n    return this._text;\n  }\n  set text(v) {\n    if (this._text === v)\n      return;\n    this._text = v;\n    this.__updateIfNeed();\n  }\n  __afterRender() {\n    this.__update();\n  }\n  __update() {\n    const el = this.__firstDOM;\n    el.innerHTML = generateHighlight(this.text, this.term, this.searchMethod, this.ignoreCase);\n  }\n}\nHighlightText.template = _tpl;\nexport {\n  HighlightText\n};\n\n//# sourceMappingURL=index.js.map","import {  createElementWithoutAttrs as createElementWithoutAttrs_jg0402, setClassAttribute as setClassAttribute_jg0402, $$ as $$_jg0402, setStyleAttribute as setStyleAttribute_jg0402, __ as ___jg0402 } from 'jinge';\nexport default function(component) {\n  const vm_0 = component;\n  return [\n  (() => {\n    const el = createElementWithoutAttrs_jg0402(\n      \"div\",\n    );\n    const fn_0 = () => {\n      setClassAttribute_jg0402(el, (['md-highlight-text', vm_0.class]));\n    };\n    fn_0();\n    vm_0[$$_jg0402].__watch([\"class\"], fn_0, component[$$_jg0402]);\n    const fn_1 = () => {\n      setStyleAttribute_jg0402(el, vm_0.style);\n    };\n    fn_1();\n    vm_0[$$_jg0402].__watch([\"style\"], fn_1, component[$$_jg0402]);\n    component[___jg0402].rootNodes.push(el);\n    return el;\n  })()\n  ];\n}","import '../../../style/index.css';\nimport './index.css';\n","import './style/index.js';import { $$ as $$_jg0402 } from 'jinge';import { Component, isString } from \"jinge\";\nimport _tpl from \"./index.tpl.js\";\nfunction csize(v) {\n  if (v === \"normal\") {\n    v = 48;\n  } else if (v === \"small\") {\n    v = 36;\n  } else if (v === \"large\") {\n    v = 64;\n  }\n  if (isString(v)) {\n    v = parseInt(v);\n  }\n  return v;\n}\nclass Spinner extends Component {\n  constructor(attrs) {\n    super(attrs);const _jg0 = this[$$_jg0402].proxy;\n    _jg0._determinate = \"value\" in attrs;const f2_jg0402 = () => {\n    _jg0.value = attrs.value; }; f2_jg0402(); attrs[$$_jg0402].__watch(\"value\", f2_jg0402);const f3_jg0402 = () => {\n    _jg0.size = csize(attrs.size); }; f3_jg0402(); attrs[$$_jg0402].__watch(\"size\", f3_jg0402);\n  }\n  get value() {\n    return this._value;\n  }\n  set value(v) {\n    if (!this._determinate)\n      return;\n    v = Number(v);\n    if (this._value === v)\n      return;\n    this._value = v;\n    this.__updateIfNeed(this.attachCircleStyle);\n  }\n  attachCircleStyle() {\n    const circle = this.__getRef(\"circle\");\n    let v = this.value;\n    if (v > 100)\n      v = 100;\n    else if (v < 0)\n      v = 0;\n    circle.style.strokeDashoffset = 2 * Math.PI * 22 * (100 - v) / 100 + \"px\";\n  }\n  __afterRender() {\n    if (this._determinate) {\n      this.attachCircleStyle();\n    }\n  }\n}\nSpinner.template = _tpl;\nexport {\n  Spinner\n};\n\n//# sourceMappingURL=index.js.map","import {  createElementWithoutAttrs as createElementWithoutAttrs_jg0402, createSVGElement as createSVGElement_jg0402, setClassAttribute as setClassAttribute_jg0402, $$ as $$_jg0402, setStyleAttribute as setStyleAttribute_jg0402, __ as ___jg0402 } from 'jinge';\nexport default function(component) {\n  const vm_0 = component;\n  return [\n  (() => {\n    const el = createElementWithoutAttrs_jg0402(\n      \"div\",\n      createSVGElement_jg0402(\n        \"svg\",\n        {\n          preserveAspectRatio: `xMidYMid meet`,\n          focusable: `false`,\n          viewBox: `0 0 48 48`\n        },\n        (() => {\n          const el = createSVGElement_jg0402(\n            \"circle\",\n            {\n              \"stroke-linecap\": `round`,\n              cx: `50%`,\n              cy: `50%`,\n              \"stroke-width\": `4`,\n              r: `22`\n            },\n          );\n          vm_0.__setRef('circle', el, component)\n          return el;\n        })()\n      )\n    );\n    const fn_0 = () => {\n      setClassAttribute_jg0402(el, (['md-spinner', vm_0._determinate && 'md-determinate', vm_0.class]));\n    };\n    fn_0();\n    vm_0[$$_jg0402].__watch([\"_determinate\"], fn_0, component[$$_jg0402]);\n    vm_0[$$_jg0402].__watch([\"class\"], fn_0, component[$$_jg0402]);\n    const fn_1 = () => {\n      setStyleAttribute_jg0402(el, ([vm_0.style, { width: vm_0.size, height: vm_0.size }]));\n    };\n    fn_1();\n    vm_0[$$_jg0402].__watch([\"style\"], fn_1, component[$$_jg0402]);\n    vm_0[$$_jg0402].__watch([\"size\"], fn_1, component[$$_jg0402]);\n    component[___jg0402].rootNodes.push(el);\n    return el;\n  })()\n  ];\n}","import '../../../style/index.css';\nimport './index.css';\n"],"names":[],"sourceRoot":""}