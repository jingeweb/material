{"version":3,"file":"js/src_pages_advance_use-router_ts-jinge-material_lib_snackbar_style_index_css-jinge-material_li-07898c.js","mappings":";;;;;;;;;;;;;;;AAA0B;AAET;AAEV,MAAM,sBAAsB,4CAAS,CAAC;AAE7C;AAFa,cACJ,WAAW,wDAAI;;;;;;;;;;;;;;;;;;ACLiM;AAC3H;AACyC;AACvI,6BAAe,oCAAS;AACxB;AACA;AACA;AACA,kBAAkB,4CAAY;AAC9B,OAAO,qCAAS;AAChB;AACA,2BAA2B,qCAAS;AACpC;AACA;AACA;AACA;AACA,yBAAyB,oDAAoB;AAC7C;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,oDAAoB;AACpC;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,gBAAgB,gEAAgC;AAChD;AACA;AACA,kBAAkB,oDAAoB;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,gBAAgB,gEAAgC;AAChD;AACA;AACA;AACA,kCAAkC,4CAAY;AAC9C,uBAAuB,qCAAS;AAChC;AACA,2CAA2C,qCAAS;AACpD,uBAAuB;AACvB;AACA;AACA,qBAAqB;AACrB,+BAA+B,oEAA8C;AAC7E,8BAA8B,qCAAS;AACvC,2BAA2B,0DAA0B;AACrD,mBAAmB;AACnB;AACA;AACA,kCAAkC,4CAAY;AAC9C,uBAAuB,qCAAS;AAChC;AACA,2CAA2C,qCAAS;AACpD,uBAAuB;AACvB;AACA;AACA,qBAAqB;AACrB,+BAA+B,oEAA8C;AAC7E,8BAA8B,qCAAS;AACvC,2BAA2B,0DAA0B;AACrD,mBAAmB;AACnB;AACA;AACA,kCAAkC,4CAAY;AAC9C,uBAAuB,qCAAS;AAChC;AACA,2CAA2C,qCAAS;AACpD,uBAAuB;AACvB;AACA;AACA,qBAAqB;AACrB,+BAA+B,oEAA8C;AAC7E,8BAA8B,qCAAS;AACvC,2BAA2B,0DAA0B;AACrD,mBAAmB;AACnB;AACA;AACA,kCAAkC,4CAAY;AAC9C,uBAAuB,qCAAS;AAChC;AACA,2CAA2C,qCAAS;AACpD,uBAAuB;AACvB;AACA;AACA,qBAAqB;AACrB,+BAA+B,oEAA8C;AAC7E,8BAA8B,qCAAS;AACvC,2BAA2B,0DAA0B;AACrD,mBAAmB;AACnB;AACA;AACA,kBAAkB,gEAAgC;AAClD;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAgC;AAChD;AACA;AACA,kBAAkB,gEAAgC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qCAAS;AACjC;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,eAAe,6DAA2B;AAC1C,cAAc,qCAAS;AACvB,WAAW,0DAA0B;AACrC,GAAG;AACH;AACA","sources":["webpack://jinge-material-site/./src/pages/advance/use-router.ts","webpack://jinge-material-site/./src/pages/advance/use-router.html"],"sourcesContent":["import { Component } from 'jinge';\n\nimport _tpl from './use-router.html';\n\nexport class PageUseRouter extends Component {\n  static template = _tpl;\n}\n","import {  attrs as attrs_jg0402, __ as ___jg0402, createElement as createElement_jg0402, createElementWithoutAttrs as createElementWithoutAttrs_jg0402, assertRenderResults as assertRenderResults_jg0402 } from 'jinge';\nimport { RouterLinkComponent as RouterLinkComponent_jg0812_4dc9538ef393 } from 'jinge-router';\nimport { PageContainer as PageContainer_jg0801, CodeBlock as CodeBlock_jg0801, NoteBlock as NoteBlock_jg0801 } from '../../components';\nexport default function(component) {\n  const vm_0 = component;\n  return [\n  ...(() => {\n    const attrs = attrs_jg0402({\n      [___jg0402]: {\n        debugName: \"attrs_of_<PageContainer>\",\n        context: component[___jg0402].context,\n        slots: {\n          'default': function(component) {\n            return [\n            (() => {\n              const el = createElement_jg0402(\n                \"section\",\n                {\n                  class: `page-container-section`\n                },\n                createElement_jg0402(\n                  \"h2\",\n                  {\n                    class: `md-headline`\n                  },\n                  `路由整合`\n                ),\n                createElementWithoutAttrs_jg0402(\n                  \"p\",\n                  `Jinge Material 组件库中，个别组件可以直接集成 `,\n                  createElement_jg0402(\n                    \"a\",\n                    {\n                      target: `_blank`,\n                      href: `https://github.com/jinge-design/jinge-router`\n                    },\n                    `jinge-router`\n                  ),\n                  ` 的路由功能。`\n                ),\n                createElementWithoutAttrs_jg0402(\n                  \"p\",\n                  `这些组件目前包括：`,\n                  ...(() => {\n                    const attrs = attrs_jg0402({\n                      [___jg0402]: {\n                        debugName: \"attrs_of_<router-link>\",\n                        context: component[___jg0402].context,\n                      },\n                      to: `components.button`,\n                      text: `md-button`\n                    });\n                    const el = RouterLinkComponent_jg0812_4dc9538ef393.create(attrs);\n                    component[___jg0402].nonRootCompNodes.push(el);\n                    return assertRenderResults_jg0402(el.__render());\n                  })(),\n                  `、`,\n                  ...(() => {\n                    const attrs = attrs_jg0402({\n                      [___jg0402]: {\n                        debugName: \"attrs_of_<router-link>\",\n                        context: component[___jg0402].context,\n                      },\n                      to: `components.list`,\n                      text: `md-list-item`\n                    });\n                    const el = RouterLinkComponent_jg0812_4dc9538ef393.create(attrs);\n                    component[___jg0402].nonRootCompNodes.push(el);\n                    return assertRenderResults_jg0402(el.__render());\n                  })(),\n                  `、`,\n                  ...(() => {\n                    const attrs = attrs_jg0402({\n                      [___jg0402]: {\n                        debugName: \"attrs_of_<router-link>\",\n                        context: component[___jg0402].context,\n                      },\n                      to: `components.bottom-bar`,\n                      text: `md-bottom-bar`\n                    });\n                    const el = RouterLinkComponent_jg0812_4dc9538ef393.create(attrs);\n                    component[___jg0402].nonRootCompNodes.push(el);\n                    return assertRenderResults_jg0402(el.__render());\n                  })(),\n                  ` 和 `,\n                  ...(() => {\n                    const attrs = attrs_jg0402({\n                      [___jg0402]: {\n                        debugName: \"attrs_of_<router-link>\",\n                        context: component[___jg0402].context,\n                      },\n                      to: `components.list`,\n                      text: `md-tab`\n                    });\n                    const el = RouterLinkComponent_jg0812_4dc9538ef393.create(attrs);\n                    component[___jg0402].nonRootCompNodes.push(el);\n                    return assertRenderResults_jg0402(el.__render());\n                  })(),\n                  `。\n                        在这些组件上，可以直接使用`,\n                  createElementWithoutAttrs_jg0402(\n                    \"code\",\n                    `router-link`\n                  ),\n                  `组件的 to、target 和 active 属性。详见这些组件的示例。`\n                ),\n                createElementWithoutAttrs_jg0402(\n                  \"p\",\n                  `需要说明的是，Jinge Material 组件库并不直接依赖 jinge-router，而是利用 jinge 框架的 Context 功能，在需要的时候通过`,\n                  createElementWithoutAttrs_jg0402(\n                    \"code\",\n                    `__getContext('router')`\n                  ),\n                  `来获取上下文中的路由器。也就是说，如果不需要使用上述组件的路由功能，则不需要安装\n                        jinge-router 库。但如果使用了路由功能（为上述组件指定了 to 属性），但没有在整个项目中依赖 jinge-router，则会报错。`\n                )\n              );\n              component[___jg0402].rootNodes.push(el);\n              return el;\n            })()\n            ];\n          }\n        }\n      },\n      centered: true,\n      title: `路由整合`\n    });\n    const el = PageContainer_jg0801.create(attrs);\n    component[___jg0402].rootNodes.push(el);\n    return assertRenderResults_jg0402(el.__render());\n  })()\n  ];\n}"],"names":[],"sourceRoot":""}