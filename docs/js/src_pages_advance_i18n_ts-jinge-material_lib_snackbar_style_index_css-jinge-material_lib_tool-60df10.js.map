{"version":3,"file":"js/src_pages_advance_i18n_ts-jinge-material_lib_snackbar_style_index_css-jinge-material_lib_tool-60df10.js","mappings":";;;;;;;;;;;;;;;AAA0B;AAET;AAEV,MAAM,iBAAiB,4CAAS,CAAC;AAExC;AAFa,SACJ,WAAW,kDAAI;;;;;;;;;;;;;;;;;ACLiM;AAClF;AACvI,6BAAe,oCAAS;AACxB;AACA;AACA;AACA,kBAAkB,4CAAY;AAC9B,OAAO,qCAAS;AAChB;AACA,2BAA2B,qCAAS;AACpC;AACA;AACA;AACA;AACA,yBAAyB,oDAAoB;AAC7C;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,oDAAoB;AACpC;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,gBAAgB,gEAAgC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qCAAS;AACjC;AACA,aAAa;AACb;AACA,yBAAyB,oDAAoB;AAC7C;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,oDAAoB;AACpC;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,gBAAgB,gEAAgC;AAChD;AACA;AACA;AACA,gBAAgB,gEAAgC;AAChD;AACA;AACA;AACA;AACA,gCAAgC,4CAAY;AAC5C,qBAAqB,qCAAS;AAC9B;AACA,yCAAyC,qCAAS;AAClD;AACA;AACA;AACA;AACA,uCAAuC,gEAAgC;AACvE;AACA;AACA;AACA,6CAA6C,YAAY;AACzD;AACA;AACA;AACA,sCAAsC,qCAAS;AAC/C;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,qBAAqB;AACrB;AACA,mBAAmB;AACnB,6BAA6B,yDAAuB;AACpD,4BAA4B,qCAAS;AACrC,yBAAyB,0DAA0B;AACnD,iBAAiB;AACjB,gBAAgB,gEAAgC;AAChD;AACA;AACA;AACA,gBAAgB,gEAAgC;AAChD;AACA;AACA;AACA,gBAAgB,gEAAgC;AAChD;AACA;AACA;AACA;AACA,gCAAgC,4CAAY;AAC5C,qBAAqB,qCAAS;AAC9B;AACA,yCAAyC,qCAAS;AAClD;AACA;AACA;AACA;AACA,uCAAuC,gEAAgC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qCAAS;AAC/C;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,qBAAqB;AACrB;AACA,mBAAmB;AACnB,6BAA6B,yDAAuB;AACpD,4BAA4B,qCAAS;AACrC,yBAAyB,0DAA0B;AACnD,iBAAiB;AACjB,gBAAgB,gEAAgC;AAChD;AACA;AACA;AACA;AACA,gCAAgC,4CAAY;AAC5C,qBAAqB,qCAAS;AAC9B;AACA,yCAAyC,qCAAS;AAClD;AACA;AACA;AACA;AACA,uCAAuC,gEAAgC;AACvE;AACA;AACA;AACA,6CAA6C,mBAAmB;AAChE;AACA;AACA;AACA,sCAAsC,qCAAS;AAC/C;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,qBAAqB;AACrB;AACA,mBAAmB;AACnB,6BAA6B,yDAAuB;AACpD,4BAA4B,qCAAS;AACrC,yBAAyB,0DAA0B;AACnD,iBAAiB;AACjB;AACA,wBAAwB,qCAAS;AACjC;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,eAAe,6DAA2B;AAC1C,cAAc,qCAAS;AACvB,WAAW,0DAA0B;AACrC,GAAG;AACH;AACA","sources":["webpack://jinge-material-site/./src/pages/advance/i18n.ts","webpack://jinge-material-site/./src/pages/advance/i18n.html"],"sourcesContent":["import { Component } from 'jinge';\n\nimport _tpl from './i18n.html';\n\nexport class PageI18N extends Component {\n  static template = _tpl;\n}\n","import {  attrs as attrs_jg0402, __ as ___jg0402, createElement as createElement_jg0402, createElementWithoutAttrs as createElementWithoutAttrs_jg0402, assertRenderResults as assertRenderResults_jg0402 } from 'jinge';\nimport { PageContainer as PageContainer_jg0801, CodeBlock as CodeBlock_jg0801, NoteBlock as NoteBlock_jg0801 } from '../../components';\nexport default function(component) {\n  const vm_0 = component;\n  return [\n  ...(() => {\n    const attrs = attrs_jg0402({\n      [___jg0402]: {\n        debugName: \"attrs_of_<PageContainer>\",\n        context: component[___jg0402].context,\n        slots: {\n          'default': function(component) {\n            return [\n            (() => {\n              const el = createElement_jg0402(\n                \"section\",\n                {\n                  class: `page-container-section`\n                },\n                createElement_jg0402(\n                  \"h2\",\n                  {\n                    class: `md-headline`\n                  },\n                  `国际化`\n                ),\n                createElementWithoutAttrs_jg0402(\n                  \"p\",\n                  `Jinge Material 组件库没有直接依赖 jinge 框架内置的国际化方案，而是自己实现了一套国际化方案。\n                        因为使用 Jinge Material 组件的项目不一定需要支持多语言。\n                        接下来会分不同的情况，介绍如何使用不同语言的 Jinge Material 组件。`\n                )\n              );\n              component[___jg0402].rootNodes.push(el);\n              return el;\n            })(),\n            (() => {\n              const el = createElement_jg0402(\n                \"section\",\n                {\n                  class: `page-container-section`\n                },\n                createElement_jg0402(\n                  \"h2\",\n                  {\n                    class: `md-title`\n                  },\n                  `使用 npm 或 yarn 包`\n                ),\n                createElementWithoutAttrs_jg0402(\n                  \"h3\",\n                  `项目只使用一种语言`\n                ),\n                createElementWithoutAttrs_jg0402(\n                  \"p\",\n                  `如果只需要支持一种语言，只需要在项目的入口文件里，加入以下的代码：`\n                ),\n                ...(() => {\n                  const attrs = attrs_jg0402({\n                    [___jg0402]: {\n                      debugName: \"attrs_of_<CodeBlock>\",\n                      context: component[___jg0402].context,\n                      slots: {\n                        'default': function(component) {\n                          return [\n                          (() => {\n                            const el = createElementWithoutAttrs_jg0402(\n                              \"code\",\n                              `\n                                    import zhCN from 'jinge-material/locales/zh_cn';\n                                    import { setLocale } from 'jinge-material/config';\n                                    setLocale(zhCN);\n                                    `\n                            );\n                            component[___jg0402].rootNodes.push(el);\n                            return el;\n                          })()\n                          ];\n                        }\n                      }\n                    },\n                    lang: `ts`\n                  });\n                  const el = CodeBlock_jg0801.create(attrs);\n                  component[___jg0402].nonRootCompNodes.push(el);\n                  return assertRenderResults_jg0402(el.__render());\n                })(),\n                createElementWithoutAttrs_jg0402(\n                  \"p\",\n                  `Jinge Material 组件库没有默认的语言，因此必须指定语言并引入语言资源。`\n                ),\n                createElementWithoutAttrs_jg0402(\n                  \"h3\",\n                  `项目使用多种语言`\n                ),\n                createElementWithoutAttrs_jg0402(\n                  \"p\",\n                  `如果需要支持多种语言，推荐一次性将项目需要支持的语言资源全部引入。这样做的好处是切换语言时不再需要额外的通过 ajax 加载资源的逻辑，并且 Jinge Material 的语言资源也很小，不会引入带宽负担。加载的资源可以存放在某个 service 中，比如：`\n                ),\n                ...(() => {\n                  const attrs = attrs_jg0402({\n                    [___jg0402]: {\n                      debugName: \"attrs_of_<CodeBlock>\",\n                      context: component[___jg0402].context,\n                      slots: {\n                        'default': function(component) {\n                          return [\n                          (() => {\n                            const el = createElementWithoutAttrs_jg0402(\n                              \"code\",\n                              `\n                                    // app/service/locale.js\n                                    import zh_cn from 'jinge-material/locales/zh_cn';\n                                    import en from 'jinge-material/locales/en';\n                                    // ... more locales to import\n                                    import {\n                                      setLocale\n                                    } from 'jinge-material/config';\n                                    const locales = {\n                                      zh_cn,\n                                      en\n                                      // ... more locales\n                                    }\n                                    export function setCurrentLocale(localeName) {\n                                      setLocale(locales[localeName]);\n                                    }\n                                    `\n                            );\n                            component[___jg0402].rootNodes.push(el);\n                            return el;\n                          })()\n                          ];\n                        }\n                      }\n                    },\n                    lang: `ts`\n                  });\n                  const el = CodeBlock_jg0801.create(attrs);\n                  component[___jg0402].nonRootCompNodes.push(el);\n                  return assertRenderResults_jg0402(el.__render());\n                })(),\n                createElementWithoutAttrs_jg0402(\n                  \"p\",\n                  `然后将上述的 service 暴露给业务层，比如项目的入口文件设置默认语言，或者在某个按钮的点击事件中切换语言：`\n                ),\n                ...(() => {\n                  const attrs = attrs_jg0402({\n                    [___jg0402]: {\n                      debugName: \"attrs_of_<CodeBlock>\",\n                      context: component[___jg0402].context,\n                      slots: {\n                        'default': function(component) {\n                          return [\n                          (() => {\n                            const el = createElementWithoutAttrs_jg0402(\n                              \"code\",\n                              `\n                                    // app/entry.js\n                                    import { setCurrentLocale } from './service/locale.js';\n                                    setCurrentLocale('zh_cn');\n                                    `\n                            );\n                            component[___jg0402].rootNodes.push(el);\n                            return el;\n                          })()\n                          ];\n                        }\n                      }\n                    },\n                    lang: `ts`\n                  });\n                  const el = CodeBlock_jg0801.create(attrs);\n                  component[___jg0402].nonRootCompNodes.push(el);\n                  return assertRenderResults_jg0402(el.__render());\n                })()\n              );\n              component[___jg0402].rootNodes.push(el);\n              return el;\n            })()\n            ];\n          }\n        }\n      },\n      centered: true,\n      title: `国际化`\n    });\n    const el = PageContainer_jg0801.create(attrs);\n    component[___jg0402].rootNodes.push(el);\n    return assertRenderResults_jg0402(el.__render());\n  })()\n  ];\n}"],"names":[],"sourceRoot":""}