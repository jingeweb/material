.gr0QOgVUMN4OJjP9hCEN.HqUidnqVYlIxZQQnq8d5{max-width:1100px;margin:0 auto;padding:16px;transition:.4s cubic-bezier(0.4, 0, 0.2, 1)}.gr0QOgVUMN4OJjP9hCEN .page-container-section{letter-spacing:.01em;line-height:1.6em}.gr0QOgVUMN4OJjP9hCEN .page-container-section+.page-container-section{margin-top:32px}.gr0QOgVUMN4OJjP9hCEN .page-container-section p>code,.gr0QOgVUMN4OJjP9hCEN .page-container-section li>code{padding:0 4px;display:inline-block;color:#ff5252;background:var(--md-outline);border-radius:2px;line-height:1.45em}.gr0QOgVUMN4OJjP9hCEN .page-container-section p+.code-example,.gr0QOgVUMN4OJjP9hCEN .page-container-section .md-layout-row+.code-example{margin-top:1em}
/**
 * The default transition, used when the element is visible
 * since the beginning of the animation
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The enter transition, used when the element is not visible on the screen
 * since the beginning of the animation and become visible
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The leave transition, used when the element is visible on the screen
 * since the beginning of the animation and is removed
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The stand transition, used when the element is going to accelerate,
 * like movements from bottom to top
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The out transition, used when the element is going to deaccelerate,
 * like movements from top to bottom
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The layout system breakpoints
 * ---
 * @access private
 * @type layout
 * @group layout
 */
/**
 * The available gutter sizes
 * ---
 * @access private
 * @type layout
 * @group layout
 */
/**
 * Breakpoint
 */
/**
 * Base
 */
/**
 * Layout Item
 */
/**
 * Hide Element
 */
.md-popover.md-tooltip {
  z-index: 111;
  pointer-events: none;
}
.md-popover.md-tooltip > .content {
  font-size: 10px;
  padding: 0 8px;
  height: 22px;
  line-height: 22px;
  text-transform: none;
  white-space: nowrap;
  color: var(--md-surface);
  background-color: var(--md-on-surface-medium);
}
@media (max-width: 960px) {
  .md-popover.md-tooltip > .content {
    height: 32px;
    font-size: 14px;
    line-height: 32px;
  }
}
.md-popover.md-tooltip .md-popover-enter-active {
  transition-duration: 0.15s;
}
.QT3oyga3VSsDr4dD3Ubh{margin:36px 0}.QT3oyga3VSsDr4dD3Ubh>.TeR_BPUT_jma8yiUGnc1>a{margin-right:10px;cursor:pointer}.QT3oyga3VSsDr4dD3Ubh .md-toolbar .md-button{margin:0 8px;font-family:"Roboto Mono",Menlo,Monaco,"Courier New",monospace;width:38px;height:38px}.QT3oyga3VSsDr4dD3Ubh .md-title{flex:1}.LNvEB8J5VTT8kwZdZwSI{min-height:86px;padding:16px;position:relative;border:1px solid var(--md-outline);border-top:0;background-color:var(--md-elevation-8)}.mb4uPfxhQjZMQoUymXy8{position:absolute;right:0;bottom:0;z-index:40}.OeQdJJrMXZzyE6b3PELF{display:none}.FcMBVMTN8OqSoJ1GIjIb{opacity:0;transition:opacity .4s cubic-bezier(0.4, 0, 0.2, 1);will-change:opacity}.JL1eb4Z1Iw2UCvHFowjf{opacity:1}
/**
 * The default transition, used when the element is visible
 * since the beginning of the animation
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The enter transition, used when the element is not visible on the screen
 * since the beginning of the animation and become visible
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The leave transition, used when the element is visible on the screen
 * since the beginning of the animation and is removed
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The stand transition, used when the element is going to accelerate,
 * like movements from bottom to top
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The out transition, used when the element is going to deaccelerate,
 * like movements from top to bottom
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The layout system breakpoints
 * ---
 * @access private
 * @type layout
 * @group layout
 */
/**
 * The available gutter sizes
 * ---
 * @access private
 * @type layout
 * @group layout
 */
/**
 * Breakpoint
 */
/**
 * Base
 */
/**
 * Layout Item
 */
/**
 * Hide Element
 */
/**
 * The elevation transition duration
 * ---
 * @access private
 * @type transition
 * @group transition
 */
.md-snackbar {
  background-color: var(--md-elevation-6);
  box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12);
  min-width: 288px;
  max-width: 568px;
  min-height: 48px;
  max-height: 80px;
  padding: 14px 24px;
  display: flex;
  align-items: center;
  position: fixed;
  z-index: 1000;
  border-radius: 2px;
  background-color: var(--md-on-background);
  color: var(--md-background);
}
.md-snackbar.md-position-center {
  margin: 0 auto;
  right: 0;
  bottom: 0;
  left: 0;
}
.md-snackbar.md-position-left {
  bottom: 24px;
  left: 24px;
}
@media (max-width: 600px) {
  .md-snackbar {
    left: 0;
    transform: none;
    border-radius: 0;
  }
}

.md-snackbar-enter,
.md-snackbar-leave {
  transition: 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  transition-property: opacity, transform;
  will-change: background-color, color, opacity, transform;
}

.md-snackbar-enter,
.md-snackbar-leave.md-snackbar-leave-active {
  opacity: 0;
}
.md-snackbar-enter.md-position-center,
.md-snackbar-leave.md-snackbar-leave-active.md-position-center {
  transform: translate3d(0, calc(100% + 8px), 0);
}
.md-snackbar-enter.md-position-left,
.md-snackbar-leave.md-snackbar-leave-active.md-position-left {
  transform: translate3d(0, calc(100% + 32px), 0);
}

.md-snackbar-enter.md-snackbar-enter-active,
.md-snackbar-leave {
  opacity: 1;
}
.md-snackbar-enter.md-snackbar-enter-active.md-position-center, .md-snackbar-enter.md-snackbar-enter-active.md-position-left,
.md-snackbar-leave.md-position-center,
.md-snackbar-leave.md-position-left {
  transform: none;
}

.md-snackbar-content {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: space-between;
  transition: opacity 0.38s cubic-bezier(0.55, 0, 0.55, 0.2);
}
.md-snackbar-content .md-button {
  min-width: 0;
  margin: -8px -8px -8px 36px;
}
@media (max-width: 600px) {
  .md-snackbar-content .md-button {
    margin-left: 12px;
  }
}
.md-snackbar-content .md-button + .md-button {
  margin-left: 16px;
}
.Ay8v55JkOkDJyvXIZlUa{max-width:100%;overflow:hidden;position:relative}.Ay8v55JkOkDJyvXIZlUa+.Ay8v55JkOkDJyvXIZlUa{margin-top:24px}.Ay8v55JkOkDJyvXIZlUa:hover .md-button{opacity:1}.Ay8v55JkOkDJyvXIZlUa::after{position:absolute;top:16px;right:16px;transition:.4s cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--md-on-surface-disabled);content:attr(data-lang);font-size:11px;line-height:1em;text-transform:uppercase}.Ay8v55JkOkDJyvXIZlUa .md-button{min-width:56px;margin:8px;position:absolute;right:0;bottom:0;opacity:0;z-index:999;color:#fff}.XwzM1Nu218AQV8eyvIvy{min-width:100%;max-height:450px;min-height:86px;overflow:auto}.XwzM1Nu218AQV8eyvIvy pre{display:flex;align-items:stretch;margin:0 !important;border-radius:0 !important}.XwzM1Nu218AQV8eyvIvy pre>code{opacity:0;min-width:100%}
.RSL2XDx5iih_FRFa7eRa .md-button{min-width:56px;margin:4px 0}.RSL2XDx5iih_FRFa7eRa .md-button+.md-button{margin-left:4px}
.zYP4z1pJc9RTkyPu5rBR{padding-bottom:16px}.zYP4z1pJc9RTkyPu5rBR table{width:100%;table-layout:auto;border-collapse:collapse;border-spacing:0;font-size:13px;line-height:18px}.zYP4z1pJc9RTkyPu5rBR tr:first-child{font-weight:500;background-color:var(--md-elevation-1)}.zYP4z1pJc9RTkyPu5rBR td,.zYP4z1pJc9RTkyPu5rBR th{padding:8px 16px;border:1px solid var(--md-outline);text-align:left;vertical-align:middle}.zYP4z1pJc9RTkyPu5rBR th{color:var(--md-on-surface-medium);height:40px;line-height:23px}.zYP4z1pJc9RTkyPu5rBR th:first-child{width:22%}.zYP4z1pJc9RTkyPu5rBR th:nth-child(2)~.zYP4z1pJc9RTkyPu5rBR th:last-child{width:17%}.zYP4z1pJc9RTkyPu5rBR td.wHPuGHmupbyPydyvV_ON{padding-left:32px}.zYP4z1pJc9RTkyPu5rBR .zOhtNaKI3_k7g1cbNwQK{vertical-align:top}.zYP4z1pJc9RTkyPu5rBR .v6FfT2EHuIES6TOrKnyh{display:block}.zYP4z1pJc9RTkyPu5rBR .j6LdSwxt2q8sdpeKLmXV{color:var(--md-on-surface-disabled);text-transform:capitalize}.zYP4z1pJc9RTkyPu5rBR .dZmAFz_XmkbBF6zrqxQH{width:40%}.zYP4z1pJc9RTkyPu5rBR code{color:#ff5252}.zYP4z1pJc9RTkyPu5rBR code span{color:#448aff}.zYP4z1pJc9RTkyPu5rBR .QurX_NgV8X_qoiLLDSPX code,.zYP4z1pJc9RTkyPu5rBR .v6FfT2EHuIES6TOrKnyh code{color:#ff5252}
.r2A7a2EC87SXe2qpG4_9{margin:1.5em 0;padding:8px 16px;overflow:hidden;border-left:4px solid #ffab40}.r2A7a2EC87SXe2qpG4_9.tGgFIeVhRdteLFSPwcgl{border-left-color:#ff5252}.r2A7a2EC87SXe2qpG4_9.umu7rhpXKjQElZekCogn{border-left-color:#69f0ae}.r2A7a2EC87SXe2qpG4_9.xn4r3qngMDJjRjYq6N31{font-size:15px}
.md-dialog-actions {
  min-height: 52px;
  padding: 8px 8px 8px 24px;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  position: relative;
}
.md-dialog-actions::before {
  height: 1px;
  position: absolute;
  top: -1px;
  right: 0;
  left: 0;
  content: " ";
}
.md-dialog-actions .md-button {
  min-width: 64px;
  margin: 0;
}
.md-dialog-actions .md-button + .md-button {
  margin-left: 8px;
}

.md-dialog-content {
  padding: 0 24px 24px;
  flex: 1;
  flex-basis: auto;
  overflow: auto;
  position: relative;
}
.md-dialog-content:first-child {
  padding-top: 24px;
}
.md-dialog-content p:first-child:not(:only-child) {
  margin-top: 0;
}
.md-dialog-content p:last-child:not(:only-child) {
  margin-bottom: 0;
}
.md-dialog-content.md-dialog-prompt-content > .md-field {
  margin: 0;
}

.md-dialog-title {
  margin-bottom: 20px;
  padding: 24px 24px 0;
}

/**
 * The default transition, used when the element is visible
 * since the beginning of the animation
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The enter transition, used when the element is not visible on the screen
 * since the beginning of the animation and become visible
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The leave transition, used when the element is visible on the screen
 * since the beginning of the animation and is removed
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The stand transition, used when the element is going to accelerate,
 * like movements from bottom to top
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The out transition, used when the element is going to deaccelerate,
 * like movements from top to bottom
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The elevation transition duration
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The layout system breakpoints
 * ---
 * @access private
 * @type layout
 * @group layout
 */
/**
 * The available gutter sizes
 * ---
 * @access private
 * @type layout
 * @group layout
 */
/**
 * Breakpoint
 */
/**
 * Base
 */
/**
 * Layout Item
 */
/**
 * Hide Element
 */
.md-dialog {
  background-color: var(--md-elevation-24);
  box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);
  min-width: 280px;
  max-width: 80%;
  max-height: 80%;
  margin: auto;
  display: flex;
  flex-flow: column;
  flex-direction: row;
  overflow: hidden;
  position: fixed;
  top: 50%;
  left: 50%;
  z-index: 110;
  border-radius: 2px;
  backface-visibility: hidden;
  pointer-events: auto;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.md-dialog-enter,
.md-dialog-leave {
  transition: opacity 0.15s cubic-bezier(0.25, 0.8, 0.25, 1), transform 0.2s cubic-bezier(0.25, 0.8, 0.25, 1);
}
.md-dialog-enter > .md-dialog-tabs,
.md-dialog-enter > .md-dialog-title,
.md-dialog-enter > .md-dialog-content,
.md-dialog-enter > .md-dialog-actions,
.md-dialog-leave > .md-dialog-tabs,
.md-dialog-leave > .md-dialog-title,
.md-dialog-leave > .md-dialog-content,
.md-dialog-leave > .md-dialog-actions {
  transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1), transform 0.25s cubic-bezier(0.4, 0, 0.2, 1);
}

.md-dialog-enter,
.md-dialog-leave-active {
  opacity: 0;
  transform: translate(-50%, -50%) scale(0.9);
}
.md-dialog-enter > .md-dialog-tabs,
.md-dialog-enter > .md-dialog-title,
.md-dialog-enter > .md-dialog-content,
.md-dialog-enter > .md-dialog-actions,
.md-dialog-leave-active > .md-dialog-tabs,
.md-dialog-leave-active > .md-dialog-title,
.md-dialog-leave-active > .md-dialog-content,
.md-dialog-leave-active > .md-dialog-actions {
  opacity: 0;
  transform: scale(0.95) translate3d(0, 10%, 0);
}

.md-dialog-enter-active {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
}
.md-dialog-enter-active > .md-dialog-tabs,
.md-dialog-enter-active > .md-dialog-title,
.md-dialog-enter-active > .md-dialog-content,
.md-dialog-enter-active > .md-dialog-actions {
  opacity: 1;
  transform: scale(1);
}

.md-dialog-container {
  display: flex;
  flex-flow: column;
  flex: 1;
}
.md-dialog-container .md-tabs {
  flex: 1;
}
.md-dialog-container .md-tabs-navigation {
  padding: 0 12px;
}
@media (max-width: 600px) {
  .md-dialog-container .md-tab {
    padding: 12px;
  }
}

@media (max-width: 600px) {
  .md-dialog-fullscreen {
    max-width: 100%;
    max-height: 100%;
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border-radius: 0;
    transform: none;
  }
  .md-dialog-fullscreen.md-dialog-enter {
    opacity: 0;
    transform: translate3d(0, 30%, 0);
  }
  .md-dialog-fullscreen.md-dialog-leave-active {
    opacity: 0;
    transform: translate3d(0, 0, 0);
  }
}
/**
 * The default transition, used when the element is visible
 * since the beginning of the animation
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The enter transition, used when the element is not visible on the screen
 * since the beginning of the animation and become visible
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The leave transition, used when the element is visible on the screen
 * since the beginning of the animation and is removed
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The stand transition, used when the element is going to accelerate,
 * like movements from bottom to top
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The out transition, used when the element is going to deaccelerate,
 * like movements from top to bottom
 * ---
 * @access private
 * @type transition
 * @group transition
 */
.md-spinner {
  width: 1em;
  height: 1em;
  display: inline-flex;
}
.md-spinner > svg {
  width: 100%;
  height: 100%;
  overflow: visible;
  transform: rotate(-90deg);
  transform-origin: center;
}
.md-spinner > svg > circle {
  fill: none;
  stroke: currentcolor;
  stroke-dasharray: 138.2304px;
  transform-origin: center;
  transition: stroke-dashoffset 0.25s cubic-bezier(0.25, 0.8, 0.25, 1);
}
.md-spinner.md-adjust-baseline {
  position: relative;
  top: 0.13em;
}
.md-spinner.md-primary > svg > circle {
  stroke: var(--md-primary);
}
.md-spinner.md-accent > svg > circle {
  stroke: var(--md-secondary);
}
.md-spinner.md-indeterminate {
  animation: md-spinner-rotate 2s linear infinite;
}
.md-spinner.md-indeterminate.md-spinner-enter > svg, .md-spinner.md-indeterminate.md-spinner-leave-active > svg {
  opacity: 0;
  transform: scale(0.1);
  transform-origin: center;
  transition: 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
  transition-property: opacity, transform;
}
.md-spinner.md-indeterminate.md-spinner-enter.md-spinner-enter-active > svg {
  opacity: 1;
  transform: scale(1);
}
.md-spinner.md-indeterminate > svg > circle {
  animation: 4s infinite cubic-bezier(0.25, 0.8, 0.25, 1);
  animation-name: md-spinner-stroke-rotate;
}

@keyframes md-spinner-rotate {
  0% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(360deg);
  }
}
@keyframes md-spinner-stroke-rotate {
  0% {
    stroke-dashoffset: 131.31888px;
    transform: rotate(0);
  }
  12.5% {
    stroke-dashoffset: 27.64608px;
    transform: rotate(0);
  }
  12.51% {
    stroke-dashoffset: 27.64608px;
    transform: rotateX(180deg) rotate(72.5deg);
  }
  25% {
    stroke-dashoffset: 131.31888px;
    transform: rotateX(180deg) rotate(72.5deg);
  }
  25.1% {
    stroke-dashoffset: 131.31888px;
    transform: rotate(270deg);
  }
  37.5% {
    stroke-dashoffset: 27.64608px;
    transform: rotate(270deg);
  }
  37.51% {
    stroke-dashoffset: 27.64608px;
    transform: rotateX(180deg) rotate(161.5deg);
  }
  50% {
    stroke-dashoffset: 131.31888px;
    transform: rotateX(180deg) rotate(161.5deg);
  }
  50.01% {
    stroke-dashoffset: 131.31888px;
    transform: rotate(180deg);
  }
  62.5% {
    stroke-dashoffset: 27.64608px;
    transform: rotate(180deg);
  }
  62.51% {
    stroke-dashoffset: 27.64608px;
    transform: rotateX(180deg) rotate(251.5deg);
  }
  75% {
    stroke-dashoffset: 131.31888px;
    transform: rotateX(180deg) rotate(251.5deg);
  }
  75.01% {
    stroke-dashoffset: 131.31888px;
    transform: rotate(90deg);
  }
  87.5% {
    stroke-dashoffset: 27.64608px;
    transform: rotate(90deg);
  }
  87.51% {
    stroke-dashoffset: 27.64608px;
    transform: rotateX(180deg) rotate(341.5deg);
  }
  100% {
    stroke-dashoffset: 131.31888px;
    transform: rotateX(180deg) rotate(341.5deg);
  }
}
/* stylelint-disable alpha-value-notation */ /**
 * The default transition, used when the element is visible
 * since the beginning of the animation
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The enter transition, used when the element is not visible on the screen
 * since the beginning of the animation and become visible
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The leave transition, used when the element is visible on the screen
 * since the beginning of the animation and is removed
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The stand transition, used when the element is going to accelerate,
 * like movements from bottom to top
 * ---
 * @access private
 * @type transition
 * @group transition
 */
/**
 * The out transition, used when the element is going to deaccelerate,
 * like movements from top to bottom
 * ---
 * @access private
 * @type transition
 * @group transition
 */
.md-field::after {
  background-color: var(--md-outline);
}
.md-field::before {
  background-color: var(--md-primary);
}
.md-field .md-icon {
  color: var(--md-on-surface-medium);
}
.md-field .md-icon::after {
  background-color: var(--md-ouline);
}
.md-field .md-icon.md-primary {
  color: var(--md-primary);
}
.md-field .md-icon.md-accent {
  color: var(--md-secondary);
}
.md-field .md-helper-text,
.md-field .md-count,
.md-field .md-suffix,
.md-field .md-prefix,
.md-field label {
  color: var(--md-on-surface-medium);
}
.md-field .md-input,
.md-field .md-textarea {
  color: var(--md-on-surface);
}
.md-field .md-input::-input-placeholder,
.md-field .md-textarea::-input-placeholder {
  color: var(--md-on-surface-medium);
}
.md-field.md-has-textarea:not(.md-autogrow)::after {
  border-color: var(--md-outline);
}
.md-field.md-has-textarea:not(.md-autogrow)::before {
  border-color: var(--md-primary);
}
.md-field.md-disabled::after {
  background-image: linear-gradient(to right, var(--md-on-surface-disabled) 0%, var(--md-on-surface-disabled) 33%, transparent 0%);
}
.md-field.md-disabled label,
.md-field.md-disabled .md-input,
.md-field.md-disabled .md-textarea {
  color: var(--md-on-surface-disabled);
}
.md-field.md-invalid::after {
  background-color: var(--md-error);
}
.md-field.md-invalid.md-has-textarea:not(.md-autogrow)::before {
  border-color: var(--md-error);
}
.md-field.md-invalid label,
.md-field.md-invalid .md-error,
.md-field.md-invalid .md-date-icon {
  color: var(--md-error);
}
.md-field.md-focused label {
  color: var(--md-primary);
}

.md-field {
  width: 100%;
  min-height: 48px;
  margin: 4px 0 24px;
  padding-top: 16px;
  display: flex;
  position: relative;
  /* stylelint-disable-next-line */
}
.md-field::before, .md-field::after {
  position: absolute;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 1;
  transition: border 0.3s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1), transform 0s 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: border, opacity, transform;
  content: " ";
}
.md-field::after {
  height: 1px;
}
.md-field::before {
  height: 2px;
  z-index: 2;
  opacity: 0;
  transform: scaleX(0.12);
}
.md-field > .md-field-container {
  display: flex;
  flex: 1;
}
.md-field > .md-field-container > .md-icon {
  margin: 4px auto;
  font-size: 24px;
}
.md-field label {
  position: absolute;
  top: 23px;
  left: 0;
  pointer-events: none;
  transition: 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
  transition-duration: 0.3s;
  font-size: 16px;
  line-height: 20px;
}
.md-field .md-icon + input + label {
  left: 24px;
}
.md-field .md-suffix {
  font-size: 16px;
  line-height: 32px;
  align-self: center;
  justify-self: center;
}
.md-field .md-prefix {
  display: none;
  padding-right: 4px;
  font-size: 16px;
  line-height: 32px;
  align-self: center;
  justify-self: center;
}
.md-field.md-focused .md-prefix, .md-field.md-has-value .md-prefix {
  display: block;
}
.md-field .md-input,
.md-field .md-textarea {
  height: 32px;
  padding: 0;
  display: block;
  flex: 1;
  border: none;
  background: none;
  transition: 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
  transition-property: font-size, padding-top, color;
  font-size: 16px;
  line-height: 32px;
}
.md-field .md-input[type=date],
.md-field .md-textarea[type=date] {
  font-size: 16px;
}
.md-field .md-input[disabled],
.md-field .md-textarea[disabled] {
  cursor: default;
}
.md-field .md-input:focus,
.md-field .md-textarea:focus {
  outline: none;
}
.md-field .md-input::-input-placeholder,
.md-field .md-textarea::-input-placeholder {
  font-size: 16px;
  text-shadow: none;
  -webkit-text-fill-color: initial;
  transition: 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
  transition-property: font-size, color;
}
.md-field .md-textarea {
  min-height: 32px;
  max-height: 230px;
  padding: 5px 0;
  resize: none;
  line-height: 1.3em;
}
.md-field .md-helper-text,
.md-field .md-error,
.md-field .md-count {
  height: 20px;
  position: absolute;
  bottom: -22px;
  font-size: 12px;
  transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}
.md-field .md-error {
  display: block !important;
  left: 0;
  opacity: 0;
  transform: translate3d(0, -8px, 0);
}
.md-field .md-count {
  right: 0;
}
.md-field .md-input-action {
  width: 32px;
  min-width: 32px;
  height: 32px;
  margin: 0;
  position: absolute;
  top: 16px;
  right: 0;
  transition: 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}
.md-field .md-input-action.md-input-action-enter, .md-field .md-input-action.md-input-action-leave.md-input-action-leave-active {
  opacity: 0;
}
.md-field .md-input-action.md-input-action-leave, .md-field .md-input-action.md-input-action-enter.md-input-action-enter-active {
  opacity: 1;
}
.md-field > .md-icon {
  margin: 4px auto;
  font-size: 24px;
  position: relative;
  z-index: 3;
  transition: 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
}
.md-field > .md-icon:first-child::after {
  width: 37px;
  height: 4px;
  position: absolute;
  left: -1px;
  bottom: -5px;
  transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  content: "";
}
.md-field > .md-icon ~ label {
  left: 36px;
}
.md-field > .md-icon ~ .md-input,
.md-field > .md-icon ~ .md-textarea,
.md-field > .md-icon ~ .md-file {
  margin-left: 12px;
}
.md-field + .md-has-textarea:not(.md-autogrow) {
  margin-top: 36px;
}
.md-field.md-has-placeholder label {
  pointer-events: auto;
  top: 10px;
  opacity: 0;
  font-size: 12px;
}
.md-field.md-has-placeholder .md-input,
.md-field.md-has-placeholder .md-textarea {
  font-size: 16px;
}
.md-field.md-has-textarea:not(.md-autogrow)::before, .md-field.md-has-textarea:not(.md-autogrow)::after {
  height: auto;
  pointer-events: none;
  top: 0;
  bottom: 0;
  transform: none;
  background: none !important;
  border: 1px solid transparent;
  border-radius: 3px;
}
.md-field.md-has-textarea:not(.md-autogrow)::before {
  border-width: 2px;
}
.md-field.md-has-textarea:not(.md-autogrow) label {
  top: 16px;
  left: 16px;
}
.md-field.md-has-textarea:not(.md-autogrow) .md-textarea {
  min-height: 100px;
  padding: 0 16px;
  resize: vertical;
}
.md-field.md-has-textarea:not(.md-autogrow) > .md-icon {
  position: absolute;
  top: 6px;
  right: 6px;
  z-index: 3;
}
.md-field.md-has-textarea:not(.md-autogrow) .md-count {
  right: 6px;
  bottom: 2px;
}
.md-field.md-has-textarea:not(.md-autogrow) .md-clear {
  top: 6px;
  right: 6px;
}
.md-field.md-has-textarea:not(.md-autogrow).md-focused label, .md-field.md-has-textarea:not(.md-autogrow).md-has-value label {
  top: 6px;
}
.md-field.md-has-textarea:not(.md-autogrow).md-focused .md-textarea, .md-field.md-has-textarea:not(.md-autogrow).md-has-value .md-textarea {
  margin-top: 10px;
}
.md-field.md-has-file::before, .md-field.md-has-file::after,
.md-field.md-has-file label {
  left: 36px;
}
.md-field.md-has-file .md-input {
  margin-left: 12px;
}
.md-field.md-focused::before, .md-field.md-highlight::before {
  opacity: 1;
  transform: scaleX(1);
  transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  transition-property: border, opacity, transform;
}
.md-field.md-focused label, .md-field.md-has-value label {
  pointer-events: auto;
  top: 0;
  opacity: 1;
  font-size: 12px;
}
.md-field.md-focused .md-input,
.md-field.md-focused .md-textarea, .md-field.md-has-value .md-input,
.md-field.md-has-value .md-textarea {
  font-size: 16px;
}
.md-field.md-inline label {
  pointer-events: none;
}
.md-field.md-inline.md-focused label {
  top: 23px;
  font-size: 16px;
}
.md-field.md-inline.md-has-value label {
  opacity: 0;
}
.md-field.md-disabled::after {
  background: bottom left repeat-x;
  background-size: 4px 1px;
}
.md-field.md-has-password .md-toggle-password {
  margin: 0;
  position: absolute;
  right: 0;
  bottom: -2px;
}
.md-field.md-has-password .md-toggle-password svg {
  width: 22px;
  height: 22px;
}
.md-field.md-clearable .md-input {
  padding-right: 30px;
}
@keyframes md-invalid-shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }
  30%, 70% {
    transform: translate3d(-4px, 0, 0);
  }
  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}
.md-field.md-invalid.md-has-value label:not(:focus) {
  animation: md-invalid-shake 0.4s cubic-bezier(0.4, 0, 0.2, 1) both;
  backface-visibility: hidden;
  perspective: 1000px;
}
.md-field.md-invalid.md-has-textarea:not(.md-autogrow)::before {
  border-width: 2px;
}
.md-field.md-invalid .md-error {
  opacity: 1;
  transform: translate3d(0, 0, 0);
}
.md-field.md-invalid .md-helper-text {
  opacity: 0;
  transform: translate3d(0, -8px, 0);
}
.md-field.md-required label::after {
  position: absolute;
  top: 2px;
  right: 0;
  transform: translateX(calc(100% + 2px));
  content: "*";
  line-height: 1em;
  vertical-align: top;
}
